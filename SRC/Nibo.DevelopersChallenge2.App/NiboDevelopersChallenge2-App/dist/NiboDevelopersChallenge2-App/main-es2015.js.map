{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/_helpers/DateTimeFormatPipe.pipe.ts","./src/app/_services/auth.service.ts","./src/app/_services/players.service.ts","./src/app/_services/transaction-ofx.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth/auth.guard.ts","./src/app/auth/auth.interceptor.ts","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/nav/nav.component.ts","./src/app/nav/nav.component.html","./src/app/players/players.component.ts","./src/app/players/players.component.html","./src/app/transactions/transactions.component.ts","./src/app/transactions/transactions.component.html","./src/app/upload/upload.component.ts","./src/app/upload/upload.component.html","./src/app/user/login/login.component.ts","./src/app/user/login/login.component.html","./src/app/user/registration/registration.component.ts","./src/app/user/registration/registration.component.html","./src/app/user/user.component.ts","./src/app/user/user.component.html","./src/app/util/Constants.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DatePipe } from '@angular/common';\r\n\r\nimport { Constants } from '../util/Constants';\r\n\r\n@Pipe({\r\n  name: 'DateTimeFormatPipe'\r\n})\r\nexport class DateTimeFormatPipePipe extends DatePipe implements PipeTransform {\r\n  transform(value: any, args?: any): any {\r\n    return super.transform(value, Constants.DATE_TIME_FMT);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  baseURL = 'https://localhost:44391/api/user/';\n  jwtHelper = new JwtHelperService();\n  decodedToken: any;\n\n  constructor(private http: HttpClient) { }\n\n  login(model: any) {\n    return this.http\n      .post(`${this.baseURL}login`, model).pipe(\n        map((response: any) => {\n          const user = response;\n          if (user) {\n            localStorage.setItem('token', user.token);\n            this.decodedToken = this.jwtHelper.decodeToken(user.token);\n            sessionStorage.setItem('username', this.decodedToken.unique_name);\n          }\n        })\n      );\n  }\n\n  register(model: any) {\n    return this.http.post(`${this.baseURL}register`, model);\n  }\n\n  loggedIn() {\n    const token = localStorage.getItem('token');\n    return !this.jwtHelper.isTokenExpired(token);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Players } from '../_models/players';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlayersService {\n  baseURL = 'https://localhost:44391/api/players';\n  tokenHeader: HttpHeaders;\n  \n  constructor(private http: HttpClient) { }\n  getAllPlayers(): Observable<Players[]> {\n    console.log(\"aqui\")\n    return this.http.get<Players[]>(this.baseURL);\n  }\n  getPlayersById(id: number): Observable<Players> {\n    return this.http.get<Players>(`${this.baseURL}/getByNome/${id}`);\n  }\n  postPlayers(players: Players) {\n    console.log(players)\n    return this.http.post(this.baseURL, players);\n  }\n  putPlayers(players: Players) {\n    return this.http.put(`${this.baseURL}/${players.id}`, players);\n  }\n  deletePlayers(id: number) {\n    return this.http.delete(`${this.baseURL}/${id}`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { TransactionOfx } from '../_models/transactionOfx';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TransactionOfxService {\n  baseURL = 'https://localhost:44391/api/players';\n  tokenHeader: HttpHeaders;\n  \n  constructor(private http: HttpClient) { }\n\n  transaction(): Observable<TransactionOfx[]> {\n    return this.http.get<TransactionOfx[]>(this.baseURL);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { UserComponent } from './user/user.component';\nimport { LoginComponent } from './user/login/login.component';\nimport { RegistrationComponent } from './user/registration/registration.component';\nimport { AuthGuard } from './auth/auth.guard';\nimport { PlayersComponent } from './players/players.component';\nimport { UploadComponent } from './upload/upload.component';\nimport { TransactionsComponent } from './transactions/transactions.component';\n\nconst routes: Routes = [\n  {\n    path: 'user', component: UserComponent,\n    children: [\n      { path: 'login', component: LoginComponent },\n      { path: 'registration', component: RegistrationComponent }\n    ]\n  },\n  {path: 'players', component: PlayersComponent, canActivate: [AuthGuard]},\n  {path: 'upload', component: UploadComponent, canActivate: [AuthGuard]},\n  {path: 'transaction', component: TransactionsComponent, canActivate: [AuthGuard]},\n  {path: 'dashboard', component: DashboardComponent, canActivate: [AuthGuard]},\n\n   {path: '', redirectTo: 'dashboard', pathMatch: 'full'},\n   {path: '**', redirectTo: 'dashboard', pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'NiboDevelopersChallenge2-App';\n}\n","<app-nav></app-nav>\n<div class=\"container\" style=\"font-family: Helvetica;\"> \n  <router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BsDropdownModule, TooltipModule, ModalModule, TabsModule} from 'ngx-bootstrap';\nimport { BsDatepickerModule} from 'ngx-bootstrap/datepicker';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToastrModule } from 'ngx-toastr';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { PlayersComponent } from './players/players.component';\nimport { PlayersService } from './_services/players.service';\nimport { NavComponent } from './nav/nav.component';\nimport { DateTimeFormatPipePipe } from './_helpers/DateTimeFormatPipe.pipe';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { UserComponent } from './user/user.component';\nimport { LoginComponent } from './user/login/login.component';\nimport { RegistrationComponent } from './user/registration/registration.component';\nimport { AuthInterceptor } from './auth/auth.interceptor';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TransactionsComponent } from './transactions/transactions.component';\nimport { UploadComponent } from './upload/upload.component';\n\nconst routes: Routes = [];\n@NgModule({\n   declarations: [\n      AppComponent,\n      DashboardComponent,\n      NavComponent,\n      DateTimeFormatPipePipe,\n      UserComponent,\n      LoginComponent,\n      RegistrationComponent,\n      PlayersComponent,\n      TransactionsComponent,\n      UploadComponent\n      ],\n   imports: [\n      BrowserModule,\n      BsDropdownModule.forRoot(),\n      BsDatepickerModule.forRoot(),\n      TooltipModule.forRoot(),\n      ModalModule.forRoot(),\n      BrowserAnimationsModule,\n      ToastrModule.forRoot({\n         timeOut: 3000,\n         preventDuplicates: true,\n         progressBar: true\n      }),\n      AppRoutingModule,\n      HttpClientModule,\n      FormsModule,\n      ReactiveFormsModule,\n      RouterModule.forRoot(routes, { useHash: true }),\n   ],\n   providers: [\n      PlayersService,\n      {\n         provide: HTTP_INTERCEPTORS,\n         useClass: AuthInterceptor,\n         multi: true\n      },\n   ],\n   bootstrap: [\n      AppComponent\n   ]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(private router: Router) {}\r\n\r\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n    if (localStorage.getItem('token') !== null) {\r\n      return true;\r\n    } else {\r\n      this.router.navigate(['/user/login']);\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpEvent, HttpRequest, HttpHandler } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/internal/operators/tap';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n    constructor(private router: Router) { }\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        if (localStorage.getItem('token') !== null) {\r\n            const cloneReq = req.clone({\r\n                headers: req.headers.set('Authorization', `Bearer ${localStorage.getItem('token')}`)\r\n            });\r\n            return next.handle(cloneReq).pipe(\r\n                tap(\r\n                    succ => { },\r\n                    err => {\r\n                        if (err.status === 401) {\r\n                            this.router.navigateByUrl('user/login');\r\n                        }\r\n                    }\r\n                )\r\n            );\r\n        } else {\r\n            return next.handle(req.clone());\r\n        }\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>dashboard works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../_services/auth.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n\n  constructor(public authService: AuthService\n    , public router: Router\n    , private toastr: ToastrService) { }\n\n  ngOnInit() {\n  }\n\n  showMenu() {\n    return this.router.url !== '/user/login';\n  }\n\n  loggedIn() {\n    return this.authService.loggedIn();\n  }\n\n  entrar() {\n    this.router.navigate(['/user/login']);\n  }\n\n  logout() {\n    localStorage.removeItem('token');\n    this.toastr.show('Log Out');\n    this.router.navigate(['/user/login']);\n  }\n\n  userName() {\n    return sessionStorage.getItem('username');\n  }\n}\n","<nav class=\"navbar navbar-expand-md navbar-dark bg-dark\" *ngIf=\"showMenu()\">\n    <div class=\"container\">\n      <a class=\"navbar-brand\" routerLink=\"dashboard\">DevelopersChallenge2</a>\n      <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarsExampleDefault\"\n        aria-controls=\"navbarsExampleDefault\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n      </button>\n  \n      <div *ngIf=\"loggedIn()\" class=\"collapse navbar-collapse\" id=\"navbarsExampleDefault\">\n        <ul class=\"navbar-nav mr-auto\">\n          <li class=\"nav-item\" routerLinkActive=\"active\">\n            <a class=\"nav-link\" routerLink=\"players\">Jogadores</a>\n          </li>\n          <li class=\"nav-item\" routerLinkActive=\"active\">\n            <a class=\"nav-link\" routerLink=\"transactions\">Transações</a>\n          </li>\n          <li class=\"nav-item\" routerLinkActive=\"active\">\n            <a class=\"nav-link\" routerLink=\"upload\">Upload</a>\n          </li>\n        </ul>\n      </div>\n  \n      <ul *ngIf=\"loggedIn()\" class=\"navbar-nav\">\n        <li class=\"nav-item dropdown\" dropdown>\n          <a dropdownToggle class=\"nav-link dropdown-toggle\" id=\"navbarDropdownMenuLink\" data-toggle=\"dropdown\"\n            aria-haspopup=\"true\" aria-expanded=\"false\" style=\"cursor: pointer; text-transform: capitalize;\">\n            {{userName()}}\n          </a>\n          <div *dropdownMenu class=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\n            <a class=\"dropdown-item\">\n              Perfil\n            </a>\n            <div role=\"separator\" class=\"divider\"></div>\n            <a class=\"dropdown-item\" (click)=\"logout()\" style=\"cursor: pointer\">\n              Sair\n            </a>\n          </div>\n        </li>\n      </ul>\n      <button *ngIf=\"!loggedIn()\" class=\"btn btn-success\" (click)=\"entrar()\">Entrar</button>\n    </div>\n  </nav>\n  ","import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { PlayersService } from '../_services/players.service';\nimport { Players } from '../_models/players';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { defineLocale, BsLocaleService, ptBrLocale, BsModalService } from 'ngx-bootstrap';\nimport { ToastrService } from 'ngx-toastr';\n\ndefineLocale('pt-br', ptBrLocale);\n\n@Component({\n  selector: 'app-players',\n  templateUrl: './players.component.html',\n  styleUrls: ['./players.component.css']\n})\nexport class PlayersComponent implements OnInit {\n\n  players: Players[];\n  player: Players;\n  modoSalve = 'post';\n  mostrarImagem = false;\n  registerForm: FormGroup;\n  bodyDeletePlayer = '';\n  date: string;\n  \n  constructor(\n    private playersService: PlayersService\n    , private modalService: BsModalService\n    , private fb: FormBuilder\n    , private localeService: BsLocaleService\n    , private toastr: ToastrService\n    ){\n      this.localeService.use('pt-br');\n    }\n    \n    ngOnInit() {\n      this.validation();\n      this.getPlayers();\n    }\n    \n    getPlayers() {\n      this.date = new Date().getMilliseconds().toString();\n      this.playersService.getAllPlayers().subscribe(\n        ( _players: Players[]) => {\n          this.players = _players;\n        }, error => {\n          this.toastr.error(`Erro ao tentar carregar os jogadores: ${error}`);\n        });\n      }\n      newPlayer(template: any) {\n        this.modoSalve = 'post';\n        this.openModal(template);\n      }\n      openModal(template: any) {\n        this.registerForm.reset();\n        template.show();\n      }\n      validation() {\n        this.registerForm = this.fb.group({\n          name: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(50)]],\n          email: ['', [Validators.required, Validators.email]],\n          favoriteGame: ['', Validators.required],\n          birthDate:['', Validators.required]\n        });\n      }\n      editPlayer(player: Players, template: any) {\n        this.modoSalve = 'put';\n        this.openModal(template);\n        this.player = Object.assign({}, player);\n        console.log(\"modal\",this.player)\n        this.registerForm.patchValue(this.players);\n      }\n      \n      deletePlayer(players: Players, template: any) {\n        this.openModal(template);\n        this.player = players;\n        this.bodyDeletePlayer = `Tem certeza que deseja excluir o jogador: ${players.name}`;\n      }\n      insertPlayer(template: any) {\n        if (this.modoSalve === 'post') {\n          this.player = Object.assign({}, this.registerForm.value);\n          console.log(\"Caiu no insert\", this.player)\n          this.playersService.postPlayers(this.player).subscribe(\n            (newPlayer: Players) => {\n              template.hide();\n              this.getPlayers();\n              this.toastr.success('Inserido com Sucesso!');\n            }, error => {\n              this.toastr.error(`Erro ao Inserir: ${error}`);\n            }\n            );\n          } else {\n            this.player = Object.assign({ id: this.player.id }, this.registerForm.value);\n            this.playersService.putPlayers(this.player).subscribe(\n              () => {\n                template.hide();\n                this.getPlayers();\n                this.toastr.success('Editado com Sucesso!');\n              }, error => {\n                this.toastr.error(`Erro ao Editar: ${error}`);\n              }\n              );\n            }\n          }\n          confirmeDelete(template: any) {\n            this.playersService.deletePlayers(this.player.id).subscribe(\n              () => {\n                template.hide();\n                this.getPlayers();\n                this.toastr.success('Deletado com Sucesso');\n              }, error => {\n                this.toastr.error('Erro ao tentar Deletar');\n                console.log(error);\n              });\n            }\n          }\n          ","<h2>\n  Jogadores</h2>\n  <hr> \n  \n  <div class=\"d-flex\">\n    \n    <!-- <div class=\"form-inline mr-auto\">\n      <div class=\"form-group mb-2\">\n        <label class=\"mr-2\">Filtro:</label> <input type=\"text\" class=\"form-control mr-2\" placeholder=\"buscar\"\n        [(ngModel)]=\"filtroLista\">\n      </div>\n    </div> -->\n    <div>\n      <button class=\"btn btn-outline-primary\" (click)=\"newPlayer(template)\">\n        <i class=\"fa fa-plus-circle\"></i>&nbsp;\n        Novo Jogador\n      </button>\n    </div>\n  </div>\n  <!-- <h3>Filtro: {{filtroLista}}</h3> -->\n  <table class=\"table table-striped\">\n    <thead class=\"thead-light\">\n      <tr>\n        <th>#</th>\n        <th>Nome</th>\n        <th>E-mail</th>\n        <th>Jogo Favorito</th>\n        <th>Data de nascimento</th>\n        <th colspan=\"2\"></th>\n      </tr>\n    </thead>\n    <tbody *ngIf=\"players && players.length\">\n      <tr *ngFor=\"let player of players\">\n        <td>{{player.id}}</td>\n        <td>{{player.name}}</td>\n        <td>{{player.email}}</td>\n        <td>{{player.favoriteGame}}</td>\n        <td>{{player.birthDate | DateTimeFormatPipe}}</td>\n        <td>\n          <div *ngIf=\"!player.name.length\">\n            Não Informado\n          </div>\n        </td>\n        <td>\n          <div class=\"btn-group\">\n            <button class=\"btn btn-sm btn-success\" tooltip=\"Editar\" (click)=\"editPlayer(player, template)\">\n              <i class=\"fa fa-edit\"></i>\n            </button>\n            <button class=\"btn btn-sm btn-danger\" tooltip=\"Excluir\" (click)=\"deletePlayer(player, confirm)\">\n              <i class=\"fa fa-eraser\"></i>\n            </button>\n          </div>\n        </td>\n      </tr>\n    </tbody>\n    <tfoot *ngIf=\"!players\">\n      <tr>\n        <td colspan=\"7\" class=\"text-center\">\n          <h4>\n            Nenhum jogador encontrado!\n          </h4>\n        </td>\n      </tr>\n    </tfoot>\n  </table>\n  \n  <div bsModal #template=\"bs-modal\" class=\"modal fade\" tabindex=\"-1\"\n  role=\"dialog\" aria-labelledby=\"dialog-sizes-name1\">\n  <div class=\"modal-dialog modal-lg\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h4 id=\"dialog-sizes-name1\" class=\"modal-title pull-left\">Cadastrar Stats</h4>\n        <button type=\"button\" class=\"close pull-right\" (click)=\"template.hide()\" aria-label=\"Close\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <form [formGroup]=\"registerForm\">\n          <div class=\"form-row\">\n            <div class=\"form-group col-md-12\">\n              <label>Nome</label>\n              <input type=\"text\" class=\"form-control\"\n              [ngClass]=\"{'is-invalid': registerForm.get('name').errors && registerForm.get('name').touched}\"\n              formControlName=\"name\" placeholder=\"Insira o name\">\n              <div *ngIf=\"registerForm.get('name').hasError('required')\n              && registerForm.get('name').touched\" class=\"invalid-feedback\">\n              Nome é obrigatório.\n            </div>\n            <div *ngIf=\"registerForm.get('name').hasError('minlength')\n            && registerForm.get('name').touched\" class=\"invalid-feedback\">\n            Nome deve ter no mínimo 4 Caracters.\n          </div>\n          <div *ngIf=\"registerForm.get('name').hasError('maxlength')\n          && registerForm.get('name').touched\" class=\"invalid-feedback\">\n          Nome deve ter no máximo 50 Caracters.\n        </div>\n      </div>\n    </div>\n    <div class=\"form-row\">\n      <div class=\"form-group col-md-8\">\n        <label>Email</label>\n        <input type=\"text\" class=\"form-control\" [ngClass]=\"{'is-invalid': registerForm.get('email').errors \n        && registerForm.get('email').touched}\" formControlName=\"email\" placeholder=\"Insira o E-mail\">\n        <div *ngIf=\"registerForm.get('email').hasError('required')\n        && registerForm.get('email').touched\" class=\"invalid-feedback\">\n        Email é obrigatório.\n      </div>\n      <div *ngIf=\"registerForm.get('email').hasError('email')\n      && registerForm.get('email').touched\" class=\"invalid-feedback\">\n      Deve ser um e-mail válido.\n    </div>\n  </div>\n  <div class=\"form-group col-md-4\">\n    <label>Data de nascimento</label>\n    <input type=\"datetime\" class=\"form-control\" bsDatepicker\n    [bsConfig]=\"{ dateInputFormat : 'DD/MM/YYYY hh:mm' }\" [ngClass]=\"{'is-invalid': registerForm.get('birthDate').errors\n    && registerForm.get('birthDate').touched}\" formControlName=\"birthDate\" placeholder=\"Data de nascimento\">\n    <div *ngIf=\"registerForm.get('birthDate').hasError('required')\n    && registerForm.get('birthDate').touched\" class=\"invalid-feedback\">\n    Data é obrigatório.\n  </div>\n</div>\n</div>\n<div class=\"form-row\">\n  <div class=\"form-group col-md-3\">\n    <label>Jogo Favorito</label>\n    <input type=\"text\" [ngClass]=\"{'is-invalid': registerForm.get('favoriteGame').errors \n    && registerForm.get('favoriteGame').touched}\" class=\"form-control is-invalid\" formControlName=\"favoriteGame\"\n    placeholder=\"Jogo Favorito\">\n    <div *ngIf=\"registerForm.get('favoriteGame').hasError('required')\n    && registerForm.get('favoriteGame').touched\" class=\"invalid-feedback\">\n    Jogo favorito é obrigatório.\n  </div>\n</div>\n</div>\n</form>\n</div>\n<div class=\"modal-footer d-flex\">\n  <button class=\"btn btn-secondary\" (click)=\"template.hide()\">\n    Fechar\n  </button>\n  <button class=\"btn btn-primary ml-auto\" (click)=\"insertPlayer(template)\">\n    Salvar Alterações\n  </button>\n</div>\n</div>\n</div>\n</div>\n\n\n<div bsModal #confirm=\"bs-modal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"dialog-sizes-name1\">\n  <div class=\"modal-dialog modal-sm\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h4 class=\"modal-title pull-left\">\n          Deletando Evento\n        </h4>\n        <button type=\"button\" class=\"close pull-right\" (click)=\"confirm.hide()\" aria-label=\"Close\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{bodyDeletePlayer}}</p>\n      </div>\n      <div class=\"modal-footer btn-group d-flex\">\n        <button type=\"button\" class=\"btn btn-outline-primary\" (click)=\"confirm.hide()\">\n          CANCELAR\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"confirmeDelete(confirm)\">\n          DELETAR\n        </button>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, Inject } from '@angular/core';\nimport { TransactionOfx } from '../_models/transactionOfx';\nimport { TransactionOfxService } from '../_services/transaction-ofx.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-transactions',\n  templateUrl: './transactions.component.html',\n  styleUrls: ['./transactions.component.css']\n})\n\nexport class TransactionsComponent {\n  [x: string]: any;\n  public transactions: TransactionOfx[];\n\n  constructor(  \n      private transactionOfxService: TransactionOfxService\n    , private toastr: ToastrService) {\n\n    this.transactionOfxService.transaction().subscribe(\n      ( _transactions: TransactionOfx[]) => {\n        this.transactions = _transactions;\n      }, error => {\n        this.toastr.error(`Erro ao tentar carregar os jogadores: ${error}`);\n      });\n  }\n}\n","  \n<h2>Transações</h2>\n<hr>\n<p *ngIf=\"!transactions\"><em>Carregando...</em></p>\n<div *ngIf=\"transactions\">\n  <table class='table table-striped'>\n    <thead class=\"thead-light\">\n      <tr>\n        <th>Data</th>\n        <th>Tipo de operação</th>\n        <th>Valor</th>\n        <th>Descrição</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let transaction of transactions\">\n        <td>{{ transaction.datePosted | date:'dd/MM/yyyy hh:mm:ss' }}</td>\n        <td>{{ transaction.type }}</td>\n        <td>{{ transaction.transactionAmount | currency:'BRL':true }}</td>\n        <td>{{ transaction.memo }}</td>\n      </tr>\n    </tbody>\n  </table>\n</div>","  \nimport { Component, ViewChild } from '@angular/core';\nimport { HttpClient, HttpRequest, HttpEventType, HttpResponse } from '@angular/common/http';\nimport { TransactionOfx } from '../_models/transactionOfx';\nimport { format } from 'util';\n\n@Component({\n  selector: 'app-upload',\n  templateUrl: './upload.component.html',\n  styleUrls: ['./upload.component.css']\n})\nexport class UploadComponent {\n  public progress: number;\n  public importedFiles: string[] = [];\n  public transactions: TransactionOfx[];\n  public newTransactions: TransactionOfx[];\n\n  private formData: FormData;\n  @ViewChild('form')\n  private form;\n\n  constructor(private http: HttpClient){}\n\n  upload(files)\n  {\n      this.formData = new FormData();\n\n      for (let file of files)\n          this.formData.append(file.name, file);\n      \n      const uploadRequest = new HttpRequest('POST', 'api/upload', this.formData, {reportProgress: true});\n\n      this.http.request(uploadRequest).subscribe(event => {\n        switch(event.type){\n            case HttpEventType.UploadProgress:\n                this.progress = Math.round(100 * event.loaded/event.total);\n                break;\n            case HttpEventType.Response:\n                this.transactions = event.body as TransactionOfx[];\n                this.importedFiles = [];\n                for (let file of files)\n                    this.importedFiles.push(file.name);\n                this.checkNewTransactions(this.transactions);\n                break;\n        }\n      });\n  }\n\n  checkNewTransactions(transactions)\n  {\n    const uploadRequest = new HttpRequest('POST', 'api/Transaction/CheckNewTransactions', this.transactions);\n\n      this.http.request(uploadRequest).subscribe(event => {\n        switch(event.type){\n            case HttpEventType.Response:\n                this.newTransactions = event.body as TransactionOfx[];\n                break;\n        }\n      });\n  }\n\n  save()\n  {\n    const uploadRequest = new HttpRequest('POST', 'api/Transaction/', this.newTransactions);\n\n      this.http.request(uploadRequest).subscribe(event => {\n        switch(event.type){\n            case HttpEventType.Response:\n                if (event.ok)\n                  alert('Dados salvos');\n                else\n                  alert('Ocorreu um erro ao salvar as transações');\n                break;\n        }\n      });\n  }\n\n  cancel()\n  {\n    this.formData = new FormData();\n    this.importedFiles = [];\n    this.transactions = null;\n    this.form.nativeElement.reset();\n  }\n}\n","<h1>Importação de arquivos OFX</h1>\n<br />\n<form #form>\n    <div class=\"row\">\n        <div class=\"col-md-4\">\n            <input #file type=\"file\" multiple (change)=\"upload(file.files)\" />\n            <br />\n\n            <div *ngIf=\"importedFiles.length > 0\">\n                    Arquivos importados:<br />\n                    <ul>\n                        <li *ngFor=\"let fileName of importedFiles\">{{fileName}}</li>\n                    </ul>\n                    <br />\n                    <span>Total de transações: {{transactions.length}}</span><br/>\n                    <br/>\n\n                    <button class=\"btn btn-success mr-1\" (click)=\"save()\">Salvar</button>\n                    <button class=\"btn btn-danger\" (click)=\"cancel()\">Cancelar</button>\n                </div>\n        </div>\n        \n        <div class=\"col-md-8 scrollable\" *ngIf=\"transactions\">\n            <table class='table table-striped'>\n                <thead class=\"thead-light\">\n                    <tr>\n                        <th>Data</th>\n                        <th>Tipo de operação</th>\n                        <th>Valor</th>\n                        <th>Descrição</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let transaction of transactions\">\n                        <td>{{ transaction.datePosted  | date:'dd/MM/yyyy hh:mm:ss' }}</td>\n                        <td>{{ transaction.type }}</td>\n                        <td>{{ transaction.transactionAmount | currency:'BRL':true }}</td>\n                        <td>{{ transaction.memo }}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</form>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { AuthService } from 'src/app/_services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  titulo = 'Login';\n  model: any = {};\n\n  constructor(private authService: AuthService\n    , public router: Router\n    , private toastr: ToastrService) { }\n\n  ngOnInit() {\n    if (localStorage.getItem('token') != null) {\n      this.router.navigate(['/dashboard']);\n    }\n  }\n\n  login() {\n    this.authService.login(this.model)\n      .subscribe(\n        () => {\n          this.router.navigate(['/dashboard']);\n          this.toastr.success('Logado com Sucesso');\n        },\n        error => {\n          this.toastr.error('Falha ao tentar Logar');\n        }\n      );\n  }\n\n}\n","<h2>Login</h2>\n\n<body class=\"text-center\" data-gr-c-s-loaded=\"true\">\n  <form class=\"form-signin\" #loginForm=\"ngForm\" (ngSubmit)=\"login()\">\n    <img class=\"mb-4\" src=\"\" alt=\"\" width=\"72\" height=\"72\">\n    <h1 class=\"h3 mb-3 font-weight-normal\">Por favor</h1>\n    <label for=\"username\" class=\"sr-only\">Usuário</label>\n    <input type=\"email\" id=\"username\" class=\"form-control\" placeholder=\"Usuário\" name=\"username\" required\n      [(ngModel)]=\"model.username\">\n    <label for=\"password\" class=\"sr-only\">Password</label>\n    <input type=\"password\" id=\"password\" class=\"form-control\" placeholder=\"Senha\" name=\"password\" required\n      [(ngModel)]=\"model.password\">\n    <!--div class=\"checkbox mb-3\">\n      <label>\n        <input type=\"checkbox\" value=\"remember-me\"> Remember me\n      </label>\n    </div-->\n    <button [disabled]=\"!loginForm.valid\" class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Entrar</button>\n    <p class=\"mt-5 mb-3 text-muted\">Não tem login? Cadastre-se abaixo</p>\n    <button class=\"btn btn-lg btn-link btn-block\" (click)=\"router.navigate(['/user/registration'])\">Quero me\n      cadastrar</button>\n  </form>\n\n</body>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { User } from 'src/app/_models/User';\nimport { AuthService } from 'src/app/_services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent implements OnInit {\n\n  registerForm: FormGroup;\n  user: User;\n\n  constructor(private authService: AuthService\n    , public router: Router\n    , public fb: FormBuilder\n    , private toastr: ToastrService) {\n  }\n\n  ngOnInit() {\n    this.validation();\n  }\n\n  validation() {\n    this.registerForm = this.fb.group({\n      fullName: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      userName: ['', Validators.required],\n      passwords: this.fb.group({\n        password: ['', [Validators.required, Validators.minLength(4)]],\n        confirmPassword: ['', Validators.required]\n      }, { validator: this.compararSenhas })\n    });\n  }\n\n  compararSenhas(fb: FormGroup) {\n    const confirmSenhaCtrl = fb.get('confirmPassword');\n    if (confirmSenhaCtrl.errors == null || 'mismatch' in confirmSenhaCtrl.errors) {\n      if (fb.get('password').value !== confirmSenhaCtrl.value) {\n        confirmSenhaCtrl.setErrors({ mismatch: true });\n      } else {\n        confirmSenhaCtrl.setErrors(null);\n      }\n    }\n  }\n\n  cadastrarUsuario() {\n    if (this.registerForm.valid) {\n      this.user = Object.assign(\n        { password: this.registerForm.get('passwords.password').value },\n        this.registerForm.value);\n      this.authService.register(this.user).subscribe(\n        () => {\n          this.router.navigate(['/user/login']);\n          this.toastr.success('Cadastro Realizado');\n        }, error => {\n          const erro = error.error;\n          erro.forEach(element => {\n            switch (element.code) {\n              case 'DuplicateUserName':\n                this.toastr.error('Cadastro Duplicado!');\n                break;\n              default:\n                this.toastr.error(`Erro no Cadatro! CODE: ${element.code}`);\n                break;\n            }\n          });\n        }\n\n      );\n    }\n  }\n\n}\n","<div class=\"row mt-4\">\n    <div class=\"col-md-6\" style=\"height: 450px;\">\n      <div class=\"row col-md-12 my-auto side-heder\">\n        <h1>Cadastro de Usuário</h1>\n      </div>\n    </div>\n    <div class=\"col-md-6\">\n      <form [formGroup]=\"registerForm\">\n        <div class=\"form-group required\">\n          <label for=\"\">Nome Completo:</label>\n          <input type=\"text\" class=\"form-control\" formControlName=\"fullName\" [ngClass]=\"{'is-invalid': registerForm.get('fullName').errors &&\n                                    registerForm.get('fullName').touched }\" placeholder=\"Insira o Nome Completo\" />\n          <div *ngIf=\"registerForm.get('fullName').hasError('required') &&\n                      registerForm.get('fullName').touched\" class=\"invalid-feedback\">\n            Nome Completo é obrigatório.\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"\">Email:</label>\n          <input class=\"form-control\" type=\"text\" formControlName=\"email\" [ngClass]=\"{ 'is-invalid': registerForm.get('email').errors && \n                                       registerForm.get('email').touched}\" placeholder=\"Insira o Nome Completo\" />\n          <div *ngIf=\"registerForm.get('email').hasError('required') &&\n                      registerForm.get('email').touched\" class=\"invalid-feedback\">\n            email é obrigatório.\n          </div>\n          <div *ngIf=\"registerForm.get('email').hasError('email')\n          && registerForm.get('email').touched\" class=\"invalid-feedback\">\n            Deve ser um e-mail válido.\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"\">Usuario:</label>\n          <input class=\"form-control\" type=\"text\" formControlName=\"userName\" [ngClass]=\"{'is-invalid': registerForm.get('userName').errors &&\n                                      registerForm.get('userName').touched}\" placeholder=\"Insira o nome de Usuário\" />\n          <div *ngIf=\"registerForm.get('userName').hasError('required') &&\n                      registerForm.get('userName').touched\" class=\"invalid-feedback\">\n            Usuário é obrigatório.\n          </div>\n        </div>\n        <div formGroupName=\"passwords\">\n          <div class=\"form-group\">\n            <label for=\"\">Senha:</label>\n            <input class=\"form-control\" type=\"password\" formControlName=\"password\" [ngClass]=\"{ 'is-invalid': registerForm.get('passwords.password').errors &&\n                                         registerForm.get('passwords.password').touched}\"\n              placeholder=\"Digite uma Senha\" />\n            <div *ngIf=\"registerForm.get('passwords.password').hasError('minlength') &&\n              registerForm.get('passwords.password').touched\" class=\"invalid-feedback\">\n              Deve conter no mínimo 4 caracters\n            </div>\n            <div *ngIf=\"registerForm.get('passwords.password').hasError('required') &&\n                        registerForm.get('passwords.password').touched\" class=\"invalid-feedback\">\n              Senha é obrigatório.\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"\">Confirmar Senha:</label>\n            <input class=\"form-control\" type=\"password\" formControlName=\"confirmPassword\" [ngClass]=\"{ 'is-invalid': registerForm.get('passwords.confirmPassword').errors \n                           && registerForm.get('passwords.confirmPassword').touched \n                           ||registerForm.get('passwords.confirmPassword').hasError('mismatch') \n                           && registerForm.get('passwords.confirmPassword').touched }\" placeholder=\"Confirme a Senha\" />\n            <div *ngIf=\"registerForm.get('passwords.confirmPassword').hasError('required') &&\n                        registerForm.get('passwords.confirmPassword').touched\" class=\"invalid-feedback\">\n              Confirme a Senha\n            </div>\n            <div *ngIf=\"registerForm.get('passwords.confirmPassword').hasError('mismatch') \n                        && registerForm.get('passwords.confirmPassword').touched\" class=\"invalid-feedback\">\n              Confirmação não confere\n            </div>\n          </div>\n        </div>\n        <div class=\"form-row\">\n          <div class=\"form-group col-md-8 offset-md-2\">\n            <button class=\"btn btn-lg btn-success btn-block\" [disabled]=\"!registerForm.valid\"\n              (click)=\"cadastrarUsuario()\">Registar</button>\n          </div>\n        </div>\n      </form>\n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}","<div class=\"container\">\n  <router-outlet></router-outlet>\n</div>","export class Constants {\n    static readonly DATE_FMT = 'dd/MM/yyyy';\n    static readonly DATE_TIME_FMT = `${Constants.DATE_FMT} hh:mm`;\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}