{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/_helpers/DateTimeFormatPipe.pipe.ts","webpack:///src/app/_services/auth.service.ts","webpack:///src/app/_services/players.service.ts","webpack:///src/app/_services/transaction-ofx.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth/auth.guard.ts","webpack:///src/app/auth/auth.interceptor.ts","webpack:///src/app/dashboard/dashboard.component.ts","webpack:///src/app/dashboard/dashboard.component.html","webpack:///src/app/nav/nav.component.ts","webpack:///src/app/nav/nav.component.html","webpack:///src/app/players/players.component.ts","webpack:///src/app/players/players.component.html","webpack:///src/app/transactions/transactions.component.ts","webpack:///src/app/transactions/transactions.component.html","webpack:///src/app/upload/upload.component.ts","webpack:///src/app/upload/upload.component.html","webpack:///src/app/user/login/login.component.ts","webpack:///src/app/user/login/login.component.html","webpack:///src/app/user/registration/registration.component.ts","webpack:///src/app/user/registration/registration.component.html","webpack:///src/app/user/user.component.ts","webpack:///src/app/user/user.component.html","webpack:///src/app/util/Constants.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","DateTimeFormatPipePipe","value","args","DATE_TIME_FMT","name","AuthService","http","baseURL","jwtHelper","model","post","pipe","response","user","localStorage","setItem","token","decodedToken","decodeToken","sessionStorage","unique_name","getItem","isTokenExpired","providedIn","PlayersService","console","log","get","players","put","delete","TransactionOfxService","routes","path","component","children","canActivate","redirectTo","pathMatch","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","timeOut","preventDuplicates","progressBar","useHash","declarations","providers","bootstrap","AuthGuard","router","next","state","navigate","AuthInterceptor","cloneReq","clone","headers","set","handle","succ","err","status","navigateByUrl","DashboardComponent","NavComponent","authService","toastr","url","loggedIn","removeItem","show","PlayersComponent","playersService","modalService","fb","localeService","modoSalve","mostrarImagem","bodyDeletePlayer","use","validation","getPlayers","date","Date","getMilliseconds","toString","getAllPlayers","subscribe","_players","error","template","openModal","registerForm","reset","group","required","minLength","maxLength","email","favoriteGame","birthDate","player","Object","assign","patchValue","postPlayers","newPlayer","hide","success","putPlayers","deletePlayers","insertPlayer","confirmeDelete","TransactionsComponent","transactionOfxService","transaction","_transactions","transactions","UploadComponent","importedFiles","files","formData","FormData","file","append","uploadRequest","reportProgress","request","event","type","UploadProgress","progress","Math","round","loaded","total","Response","body","push","checkNewTransactions","newTransactions","ok","alert","form","nativeElement","upload","LoginComponent","titulo","login","RegistrationComponent","fullName","userName","passwords","password","confirmPassword","validator","compararSenhas","confirmSenhaCtrl","errors","setErrors","mismatch","valid","register","erro","forEach","element","cadastrarUsuario","UserComponent","Constants","DATE_FMT","environment","production","bootstrapModule","catch"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQaC,sB;;;;;;;;;;;;;kCACDC,K,EAAYC,I,EAAU;AAC9B,uGAAuBD,KAAvB,EAA8B,0DAAUE,aAAxC;AACD;;;;MAHyC,wD;;;sDAA/BH,sB;AAAsB,K;;;;YAAtBA,sB;AAAsB;;;kHAAtBA,sB;;;;;sEAAAA,sB,EAAsB;cAHlC,kDAGkC;eAH7B;AACJI,cAAI,EAAE;AADF,S;AAG6B,Q;;;;;;;;;;;;;;;;;;ACRnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQaC,W;;;AAMX,2BAAoBC,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAJpB,aAAAC,OAAA,GAAU,mCAAV;AACA,aAAAC,SAAA,GAAY,IAAI,mEAAJ,EAAZ;AAGyC;;;;8BAEnCC,K,EAAY;AAAA;;AAChB,iBAAO,KAAKH,IAAL,CACJI,IADI,WACI,KAAKH,OADT,YACyBE,KADzB,EACgCE,IADhC,CAEH,2DAAI,UAACC,QAAD,EAAmB;AACrB,gBAAMC,IAAI,GAAGD,QAAb;;AACA,gBAAIC,IAAJ,EAAU;AACRC,0BAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,IAAI,CAACG,KAAnC;AACA,mBAAI,CAACC,YAAL,GAAoB,KAAI,CAACT,SAAL,CAAeU,WAAf,CAA2BL,IAAI,CAACG,KAAhC,CAApB;AACAG,4BAAc,CAACJ,OAAf,CAAuB,UAAvB,EAAmC,KAAI,CAACE,YAAL,CAAkBG,WAArD;AACD;AACF,WAPD,CAFG,CAAP;AAWD;;;iCAEQX,K,EAAY;AACnB,iBAAO,KAAKH,IAAL,CAAUI,IAAV,WAAkB,KAAKH,OAAvB,eAA0CE,KAA1C,CAAP;AACD;;;mCAEU;AACT,cAAMO,KAAK,GAAGF,YAAY,CAACO,OAAb,CAAqB,OAArB,CAAd;AACA,iBAAO,CAAC,KAAKb,SAAL,CAAec,cAAf,CAA8BN,KAA9B,CAAR;AACD;;;;;;;uBA7BUX,W,EAAW,uH;AAAA,K;;;aAAXA,W;AAAW,eAAXA,WAAW,K;AAAA,kBAFV;;;;;sEAEDA,W,EAAW;cAHvB,wDAGuB;eAHZ;AACVkB,oBAAU,EAAE;AADF,S;AAGY,Q;;;;;;;;;;;;;;;;;;;;;;ACRxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQaC,c;;;AAIX,8BAAoBlB,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAHpB,aAAAC,OAAA,GAAU,qCAAV;AAGyC;;;;wCAC5B;AACXkB,iBAAO,CAACC,GAAR,CAAY,MAAZ;AACA,iBAAO,KAAKpB,IAAL,CAAUqB,GAAV,CAAyB,KAAKpB,OAA9B,CAAP;AACD;;;uCACcR,E,EAAU;AACvB,iBAAO,KAAKO,IAAL,CAAUqB,GAAV,WAA0B,KAAKpB,OAA/B,wBAAoDR,EAApD,EAAP;AACD;;;oCACW6B,O,EAAkB;AAC5BH,iBAAO,CAACC,GAAR,CAAYE,OAAZ;AACA,iBAAO,KAAKtB,IAAL,CAAUI,IAAV,CAAe,KAAKH,OAApB,EAA6BqB,OAA7B,CAAP;AACD;;;mCACUA,O,EAAkB;AAC3B,iBAAO,KAAKtB,IAAL,CAAUuB,GAAV,WAAiB,KAAKtB,OAAtB,cAAiCqB,OAAO,CAAC7B,EAAzC,GAA+C6B,OAA/C,CAAP;AACD;;;sCACa7B,E,EAAY;AACxB,iBAAO,KAAKO,IAAL,CAAUwB,MAAV,WAAoB,KAAKvB,OAAzB,cAAoCR,EAApC,EAAP;AACD;;;;;;;uBArBUyB,c,EAAc,uH;AAAA,K;;;aAAdA,c;AAAc,eAAdA,cAAc,K;AAAA,kBAFb;;;;;sEAEDA,c,EAAc;cAH1B,wDAG0B;eAHf;AACVD,oBAAU,EAAE;AADF,S;AAGe,Q;;;;;;;;;;;;;;;;;;;;;;ACR3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQaQ,qB;;;AAIX,qCAAoBzB,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAHpB,aAAAC,OAAA,GAAU,qCAAV;AAGyC;;;;sCAE9B;AACT,iBAAO,KAAKD,IAAL,CAAUqB,GAAV,CAAgC,KAAKpB,OAArC,CAAP;AACD;;;;;;;uBARUwB,qB,EAAqB,uH;AAAA,K;;;aAArBA,qB;AAAqB,eAArBA,qBAAqB,K;AAAA,kBAFpB;;;;;sEAEDA,qB,EAAqB;cAHjC,wDAGiC;eAHtB;AACVR,oBAAU,EAAE;AADF,S;AAGsB,Q;;;;;;;;;;;;;;;;;;;;;;ACRlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAWA,QAAMS,MAAM,GAAW,CACrB;AACEC,UAAI,EAAE,MADR;AACgBC,eAAS,EAAE,kEAD3B;AAEEC,cAAQ,EAAE,CACR;AAAEF,YAAI,EAAE,OAAR;AAAiBC,iBAAS,EAAE;AAA5B,OADQ,EAER;AAAED,YAAI,EAAE,cAAR;AAAwBC,iBAAS,EAAE;AAAnC,OAFQ;AAFZ,KADqB,EAQrB;AAACD,UAAI,EAAE,SAAP;AAAkBC,eAAS,EAAE,2EAA7B;AAA+CE,iBAAW,EAAE,CAAC,0DAAD;AAA5D,KARqB,EASrB;AAACH,UAAI,EAAE,QAAP;AAAiBC,eAAS,EAAE,wEAA5B;AAA6CE,iBAAW,EAAE,CAAC,0DAAD;AAA1D,KATqB,EAUrB;AAACH,UAAI,EAAE,aAAP;AAAsBC,eAAS,EAAE,0FAAjC;AAAwDE,iBAAW,EAAE,CAAC,0DAAD;AAArE,KAVqB,EAWrB;AAACH,UAAI,EAAE,WAAP;AAAoBC,eAAS,EAAE,iFAA/B;AAAmDE,iBAAW,EAAE,CAAC,0DAAD;AAAhE,KAXqB,EAapB;AAACH,UAAI,EAAE,EAAP;AAAWI,gBAAU,EAAE,WAAvB;AAAoCC,eAAS,EAAE;AAA/C,KAboB,EAcpB;AAACL,UAAI,EAAE,IAAP;AAAaI,gBAAU,EAAE,WAAzB;AAAsCC,eAAS,EAAE;AAAjD,KAdoB,CAAvB;;QAqBaC,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAHlB,CAAC,6DAAaC,OAAb,CAAqBR,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;;0HAAhBO,gB,EAAgB;AAAA;AAAA,kBAFjB,4DAEiB;AAAA,O;AAFL,K;;;;;sEAEXA,gB,EAAgB;cAJ5B,sDAI4B;eAJnB;AACRE,iBAAO,EAAE,CAAC,6DAAaD,OAAb,CAAqBR,MAArB,CAAD,CADD;AAERlC,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAImB,Q;;;;;;;;;;;;;;;;;;AChC7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOa4C,Y,GALb;AAAA;;AAME,WAAAC,KAAA,GAAQ,8BAAR;AACD,K;;;uBAFYD,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA,+D;AAAA;AAAA;ACPzB;;AACA;;AACE;;AACF;;;;;;;;;sEDIaA,Y,EAAY;cALxB,uDAKwB;eALd;AACTE,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;AEPzuBA,QAAMd,MAAM,GAAW,EAAvB;;QA4Cae,S;;;;;YAAAA,S;AAAS,kBAHhB,2DAGgB;;;;yBAATA,S;AAAS,O;AAAA,iBAZR,CACR,yEADQ,EAER;AACGC,eAAO,EAAE,sEADZ;AAEGC,gBAAQ,EAAE,uEAFb;AAGGC,aAAK,EAAE;AAHV,OAFQ,C;AAOV,gBAzBQ,CACN,uEADM,EAEN,+DAAiBV,OAAjB,EAFM,EAGN,4EAAmBA,OAAnB,EAHM,EAIN,4DAAcA,OAAd,EAJM,EAKN,0DAAYA,OAAZ,EALM,EAMN,4FANM,EAON,wDAAaA,OAAb,CAAqB;AAClBW,eAAO,EAAE,IADS;AAElBC,yBAAiB,EAAE,IAFD;AAGlBC,mBAAW,EAAE;AAHK,OAArB,CAPM,EAYN,oEAZM,EAaN,qEAbM,EAcN,0DAdM,EAeN,kEAfM,EAgBN,8DAAab,OAAb,CAAqBR,MAArB,EAA6B;AAAEsB,eAAO,EAAE;AAAX,OAA7B,CAhBM,CAyBR;;;;0HAKSP,S,EAAS;AAAA,uBAzChB,2DAyCgB,EAxChB,kFAwCgB,EAvChB,gEAuCgB,EAtChB,wFAsCgB,EArChB,mEAqCgB,EApChB,2EAoCgB,EAnChB,gGAmCgB,EAlChB,4EAkCgB,EAjChB,2FAiCgB,EAhChB,yEAgCgB;AAhCD,kBAGf,uEAHe,EAGF,8DAHE,EAGF,2EAHE,EAGF,2DAHE,EAGF,yDAHE,EAQf,4FARe,EAQQ,uDARR,EAcf,oEAde,EAef,qEAfe,EAgBf,0DAhBe,EAiBf,kEAjBe,EAiBI,6DAjBJ;AAgCC,O;AAfG,K;;;;;sEAeZA,S,EAAS;cA3CrB,sDA2CqB;eA3CZ;AACPQ,sBAAY,EAAE,CACX,2DADW,EAEX,kFAFW,EAGX,gEAHW,EAIX,wFAJW,EAKX,mEALW,EAMX,2EANW,EAOX,gGAPW,EAQX,4EARW,EASX,2FATW,EAUX,yEAVW,CADP;AAaPd,iBAAO,EAAE,CACN,uEADM,EAEN,+DAAiBD,OAAjB,EAFM,EAGN,4EAAmBA,OAAnB,EAHM,EAIN,4DAAcA,OAAd,EAJM,EAKN,0DAAYA,OAAZ,EALM,EAMN,4FANM,EAON,wDAAaA,OAAb,CAAqB;AAClBW,mBAAO,EAAE,IADS;AAElBC,6BAAiB,EAAE,IAFD;AAGlBC,uBAAW,EAAE;AAHK,WAArB,CAPM,EAYN,oEAZM,EAaN,qEAbM,EAcN,0DAdM,EAeN,kEAfM,EAgBN,8DAAab,OAAb,CAAqBR,MAArB,EAA6B;AAAEsB,mBAAO,EAAE;AAAX,WAA7B,CAhBM,CAbF;AA+BPE,mBAAS,EAAE,CACR,yEADQ,EAER;AACGR,mBAAO,EAAE,sEADZ;AAEGC,oBAAQ,EAAE,uEAFb;AAGGC,iBAAK,EAAE;AAHV,WAFQ,CA/BJ;AAuCPO,mBAAS,EAAE,CACR,2DADQ;AAvCJ,S;AA2CY,Q;;;;;;;;;;;;;;;;;;ACnEtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaC,S;;;AAEX,yBAAoBC,MAApB,EAAoC;AAAA;;AAAhB,aAAAA,MAAA,GAAAA,MAAA;AAAkB;;;;oCAE1BC,I,EAA8BC,K,EAA0B;AAClE,cAAI/C,YAAY,CAACO,OAAb,CAAqB,OAArB,MAAkC,IAAtC,EAA4C;AAC1C,mBAAO,IAAP;AACD,WAFD,MAEO;AACL,iBAAKsC,MAAL,CAAYG,QAAZ,CAAqB,CAAC,aAAD,CAArB;AACA,mBAAO,KAAP;AACD;AACF;;;;;;;uBAXUJ,S,EAAS,8G;AAAA,K;;;aAATA,S;AAAS,eAATA,SAAS,K;AAAA,kBAFR;;;;;sEAEDA,S,EAAS;cAHrB,wDAGqB;eAHV;AACVnC,oBAAU,EAAE;AADF,S;AAGU,Q;;;;;;;;;;;;;;;;;;;;;;ACPtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOawC,e;;;AAET,+BAAoBJ,MAApB,EAAoC;AAAA;;AAAhB,aAAAA,MAAA,GAAAA,MAAA;AAAmB;;;;kCAE7BtE,G,EAAuBuE,I,EAAiB;AAAA;;AAC9C,cAAI9C,YAAY,CAACO,OAAb,CAAqB,OAArB,MAAkC,IAAtC,EAA4C;AACxC,gBAAM2C,QAAQ,GAAG3E,GAAG,CAAC4E,KAAJ,CAAU;AACvBC,qBAAO,EAAE7E,GAAG,CAAC6E,OAAJ,CAAYC,GAAZ,CAAgB,eAAhB,mBAA2CrD,YAAY,CAACO,OAAb,CAAqB,OAArB,CAA3C;AADc,aAAV,CAAjB;AAGA,mBAAOuC,IAAI,CAACQ,MAAL,CAAYJ,QAAZ,EAAsBrD,IAAtB,CACH,wEACI,UAAA0D,IAAI,EAAI,CAAG,CADf,EAEI,UAAAC,GAAG,EAAI;AACH,kBAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACpB,sBAAI,CAACZ,MAAL,CAAYa,aAAZ,CAA0B,YAA1B;AACH;AACJ,aANL,CADG,CAAP;AAUH,WAdD,MAcO;AACH,mBAAOZ,IAAI,CAACQ,MAAL,CAAY/E,GAAG,CAAC4E,KAAJ,EAAZ,CAAP;AACH;AACJ;;;;;;;uBAtBQF,e,EAAe,8G;AAAA,K;;;aAAfA,e;AAAe,eAAfA,eAAe,K;AAAA,kBADF;;;;;sEACbA,e,EAAe;cAD3B,wDAC2B;eADhB;AAAExC,oBAAU,EAAE;AAAd,S;AACgB,Q;;;;;;;;;;;;;;;;;;;;;;ACP5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOakD,kB;;;AAEX,oCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,kB;AAAkB,K;;;YAAlBA,kB;AAAkB,oC;AAAA,c;AAAA,a;AAAA;AAAA;ACP/B;;AAAG;;AAAgB;;;;;;;;sEDONA,kB,EAAkB;cAL9B,uDAK8B;eALpB;AACT7B,kBAAQ,EAAE,eADD;AAETC,qBAAW,EAAE,4BAFJ;AAGTC,mBAAS,EAAE,CAAC,2BAAD;AAHF,S;AAKoB,Q;;;;;;;;;;;;;;;;;;;;AEP/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACQM;;AACE;;AACE;;AACE;;AAAyC;;AAAS;;AACpD;;AACA;;AACE;;AAA8C;;AAAU;;AAC1D;;AACA;;AACE;;AAAwC;;AAAM;;AAChD;;AACF;;AACF;;;;;;;;AAQI;;AACE;;AACE;;AACF;;AACA;;AACA;;AAAyB;AAAA;;AAAA;;AAAA;AAAA;;AACvB;;AACF;;AACF;;;;;;AAdJ;;AACE;;AACE;;AAEE;;AACF;;AACA;;AASF;;AACF;;;;;;AAZM;;AAAA;;;;;;;;AAaN;;AAAoD;AAAA;;AAAA;;AAAA;AAAA;;AAAmB;;AAAM;;;;;;AAvCnF;;AACI;;AACE;;AAA+C;;AAAoB;;AACnE;;AAEE;;AACF;;AAEA;;AAcA;;AAiBA;;AACF;;AACF;;;;;;AAjCS;;AAAA;;AAcD;;AAAA;;AAiBI;;AAAA;;;;QD7BD4B,Y;;;AAEX,4BAAmBC,WAAnB,EACWhB,MADX,EAEYiB,MAFZ,EAEmC;AAAA;;AAFhB,aAAAD,WAAA,GAAAA,WAAA;AACR,aAAAhB,MAAA,GAAAA,MAAA;AACC,aAAAiB,MAAA,GAAAA,MAAA;AAA0B;;;;mCAE3B,CACV;;;mCAEU;AACT,iBAAO,KAAKjB,MAAL,CAAYkB,GAAZ,KAAoB,aAA3B;AACD;;;mCAEU;AACT,iBAAO,KAAKF,WAAL,CAAiBG,QAAjB,EAAP;AACD;;;iCAEQ;AACP,eAAKnB,MAAL,CAAYG,QAAZ,CAAqB,CAAC,aAAD,CAArB;AACD;;;iCAEQ;AACPhD,sBAAY,CAACiE,UAAb,CAAwB,OAAxB;AACA,eAAKH,MAAL,CAAYI,IAAZ,CAAiB,SAAjB;AACA,eAAKrB,MAAL,CAAYG,QAAZ,CAAqB,CAAC,aAAD,CAArB;AACD;;;mCAEU;AACT,iBAAO3C,cAAc,CAACE,OAAf,CAAuB,UAAvB,CAAP;AACD;;;;;;;uBA7BUqD,Y,EAAY,mI,EAAA,uH,EAAA,yH;AAAA,K;;;YAAZA,Y;AAAY,8B;AAAA,c;AAAA,a;AAAA,y9C;AAAA;AAAA;ACVzB;;;;AAAyD;;;;;;;;;sEDU5CA,Y,EAAY;cALxB,uDAKwB;eALd;AACT9B,kBAAQ,EAAE,SADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEVzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACuCU;;AACE;;AACF;;;;;;;;AATJ;;AACE;;AAAI;;AAAa;;AACjB;;AAAI;;AAAe;;AACnB;;AAAI;;AAAgB;;AACpB;;AAAI;;AAAuB;;AAC3B;;AAAI;;;;AAAyC;;AAC7C;;AACE;;AAGF;;AACA;;AACE;;AACE;;AAAwD;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACtD;;AACF;;AACA;;AAAwD;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACtD;;AACF;;AACF;;AACF;;AACF;;;;;;AApBM;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAEG;;AAAA;;;;;;AARX;;AACE;;AAsBF;;;;;;AAtBM;;AAAA;;;;;;AAuBN;;AACE;;AACE;;AACE;;AACE;;AACF;;AACF;;AACF;;AACF;;;;;;AAqBU;;AAEA;;AACF;;;;;;AACA;;AAEA;;AACF;;;;;;AACA;;AAEA;;AACF;;;;;;AAQA;;AAEA;;AACF;;;;;;AACA;;AAEA;;AACF;;;;;;AAOA;;AAEA;;AACF;;;;;;AASE;;AAEA;;AACF;;;;;;;;;;;;;;;;AD7HF,uEAAa,OAAb,EAAsB,wDAAtB;;QAOamC,gB;;;AAUX,gCACUC,cADV,EAEYC,YAFZ,EAGYC,EAHZ,EAIYC,aAJZ,EAKYT,MALZ,EAKiC;AAAA;;AAJvB,aAAAM,cAAA,GAAAA,cAAA;AACE,aAAAC,YAAA,GAAAA,YAAA;AACA,aAAAC,EAAA,GAAAA,EAAA;AACA,aAAAC,aAAA,GAAAA,aAAA;AACA,aAAAT,MAAA,GAAAA,MAAA;AAXZ,aAAAU,SAAA,GAAY,MAAZ;AACA,aAAAC,aAAA,GAAgB,KAAhB;AAEA,aAAAC,gBAAA,GAAmB,EAAnB;AAUI,aAAKH,aAAL,CAAmBI,GAAnB,CAAuB,OAAvB;AACD;;;;mCAEU;AACT,eAAKC,UAAL;AACA,eAAKC,UAAL;AACD;;;qCAEY;AAAA;;AACX,eAAKC,IAAL,GAAY,IAAIC,IAAJ,GAAWC,eAAX,GAA6BC,QAA7B,EAAZ;AACA,eAAKb,cAAL,CAAoBc,aAApB,GAAoCC,SAApC,CACE,UAAEC,QAAF,EAA0B;AACxB,kBAAI,CAACtE,OAAL,GAAesE,QAAf;AACD,WAHH,EAGK,UAAAC,KAAK,EAAI;AACV,kBAAI,CAACvB,MAAL,CAAYuB,KAAZ,iDAA2DA,KAA3D;AACD,WALH;AAMC;;;kCACSC,Q,EAAe;AACvB,eAAKd,SAAL,GAAiB,MAAjB;AACA,eAAKe,SAAL,CAAeD,QAAf;AACD;;;kCACSA,Q,EAAe;AACvB,eAAKE,YAAL,CAAkBC,KAAlB;AACAH,kBAAQ,CAACpB,IAAT;AACD;;;qCACY;AACX,eAAKsB,YAAL,GAAoB,KAAKlB,EAAL,CAAQoB,KAAR,CAAc;AAChCpG,gBAAI,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWqG,QAAZ,EAAsB,0DAAWC,SAAX,CAAqB,CAArB,CAAtB,EAA+C,0DAAWC,SAAX,CAAqB,EAArB,CAA/C,CAAL,CAD0B;AAEhCC,iBAAK,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWH,QAAZ,EAAsB,0DAAWG,KAAjC,CAAL,CAFyB;AAGhCC,wBAAY,EAAE,CAAC,EAAD,EAAK,0DAAWJ,QAAhB,CAHkB;AAIhCK,qBAAS,EAAC,CAAC,EAAD,EAAK,0DAAWL,QAAhB;AAJsB,WAAd,CAApB;AAMD;;;mCACUM,M,EAAiBX,Q,EAAe;AACzC,eAAKd,SAAL,GAAiB,KAAjB;AACA,eAAKe,SAAL,CAAeD,QAAf;AACA,eAAKW,MAAL,GAAcC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBF,MAAlB,CAAd;AACAtF,iBAAO,CAACC,GAAR,CAAY,OAAZ,EAAoB,KAAKqF,MAAzB;AACA,eAAKT,YAAL,CAAkBY,UAAlB,CAA6B,KAAKtF,OAAlC;AACD;;;qCAEYA,O,EAAkBwE,Q,EAAe;AAC5C,eAAKC,SAAL,CAAeD,QAAf;AACA,eAAKW,MAAL,GAAcnF,OAAd;AACA,eAAK4D,gBAAL,uDAAqE5D,OAAO,CAACxB,IAA7E;AACD;;;qCACYgG,Q,EAAe;AAAA;;AAC1B,cAAI,KAAKd,SAAL,KAAmB,MAAvB,EAA+B;AAC7B,iBAAKyB,MAAL,GAAcC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKX,YAAL,CAAkBrG,KAApC,CAAd;AACAwB,mBAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B,KAAKqF,MAAnC;AACA,iBAAK7B,cAAL,CAAoBiC,WAApB,CAAgC,KAAKJ,MAArC,EAA6Cd,SAA7C,CACE,UAACmB,SAAD,EAAwB;AACtBhB,sBAAQ,CAACiB,IAAT;;AACA,oBAAI,CAAC1B,UAAL;;AACA,oBAAI,CAACf,MAAL,CAAY0C,OAAZ,CAAoB,uBAApB;AACD,aALH,EAKK,UAAAnB,KAAK,EAAI;AACV,oBAAI,CAACvB,MAAL,CAAYuB,KAAZ,4BAAsCA,KAAtC;AACD,aAPH;AASC,WAZH,MAYS;AACL,iBAAKY,MAAL,GAAcC,MAAM,CAACC,MAAP,CAAc;AAAElH,gBAAE,EAAE,KAAKgH,MAAL,CAAYhH;AAAlB,aAAd,EAAsC,KAAKuG,YAAL,CAAkBrG,KAAxD,CAAd;AACA,iBAAKiF,cAAL,CAAoBqC,UAApB,CAA+B,KAAKR,MAApC,EAA4Cd,SAA5C,CACE,YAAM;AACJG,sBAAQ,CAACiB,IAAT;;AACA,oBAAI,CAAC1B,UAAL;;AACA,oBAAI,CAACf,MAAL,CAAY0C,OAAZ,CAAoB,sBAApB;AACD,aALH,EAKK,UAAAnB,KAAK,EAAI;AACV,oBAAI,CAACvB,MAAL,CAAYuB,KAAZ,2BAAqCA,KAArC;AACD,aAPH;AASC;AACF;;;uCACcC,Q,EAAe;AAAA;;AAC5B,eAAKlB,cAAL,CAAoBsC,aAApB,CAAkC,KAAKT,MAAL,CAAYhH,EAA9C,EAAkDkG,SAAlD,CACE,YAAM;AACJG,oBAAQ,CAACiB,IAAT;;AACA,kBAAI,CAAC1B,UAAL;;AACA,kBAAI,CAACf,MAAL,CAAY0C,OAAZ,CAAoB,sBAApB;AACD,WALH,EAKK,UAAAnB,KAAK,EAAI;AACV,kBAAI,CAACvB,MAAL,CAAYuB,KAAZ,CAAkB,wBAAlB;;AACA1E,mBAAO,CAACC,GAAR,CAAYyE,KAAZ;AACD,WARH;AASC;;;;;;;uBAnGAlB,gB,EAAgB,yI,EAAA,6H,EAAA,2H,EAAA,8H,EAAA,yH;AAAA,K;;;YAAhBA,gB;AAAgB,kC;AAAA,e;AAAA,c;AAAA,07D;AAAA;AAAA;;;ACd7B;;AACE;;AAAS;;AACT;;AAEA;;AAQE;;AACE;;AAAwC;AAAA;;AAAA;;AAAA,mBAAS,IAAAmC,SAAA,MAAT;AAA4B,WAA5B;;AACtC;;AAAiC;;AAEnC;;AACF;;AACF;;AAEA;;AACE;;AACE;;AACE;;AAAI;;AAAC;;AACL;;AAAI;;AAAI;;AACR;;AAAI;;AAAM;;AACV;;AAAI;;AAAa;;AACjB;;AAAI;;AAAkB;;AACtB;;AACF;;AACF;;AACA;;AAwBA;;AASF;;AAEA;;AAEA;;AACE;;AACE;;AACE;;AAA0D;;AAAe;;AACzE;;AAA+C;AAAA;;AAAA;;AAAA,mBAAS,WAAT;AAAwB,WAAxB;;AAC7C;;AAAyB;;AAAO;;AAClC;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;AAAO;;AAAI;;AACX;;AAGA;;AAIF;;AAIF;;AAIJ;;AACF;;AACA;;AACE;;AACE;;AAAO;;AAAK;;AACZ;;AAEA;;AAIF;;AAIJ;;AACA;;AACE;;AAAO;;AAAkB;;AACzB;;AAGA;;AAIJ;;AACA;;AACA;;AACE;;AACE;;AAAO;;AAAa;;AACpB;;AAGA;;AAIJ;;AACA;;AACA;;AACA;;AACA;;AACE;;AAAkC;AAAA;;AAAA;;AAAA,mBAAS,WAAT;AAAwB,WAAxB;;AAChC;;AACF;;AACA;;AAAwC;AAAA;;AAAA;;AAAA,mBAAS,IAAAK,YAAA,MAAT;AAA+B,WAA/B;;AACtC;;AACF;;AACF;;AACA;;AACA;;AACA;;AAGA;;AACE;;AACE;;AACE;;AACE;;AACE;;AACF;;AACA;;AAA+C;AAAA;;AAAA;;AAAA,mBAAS,WAAT;AAAuB,WAAvB;;AAC7C;;AAAyB;;AAAO;;AAClC;;AACF;;AACA;;AACE;;AAAG;;AAAoB;;AACzB;;AACA;;AACE;;AAAsD;AAAA;;AAAA;;AAAA,mBAAS,WAAT;AAAuB,WAAvB;;AACpD;;AACF;;AACA;;AAAqD;AAAA;;AAAA;;AAAA,mBAAS,IAAAC,cAAA,MAAT;AAAgC,WAAhC;;AACnD;;AACF;;AACF;;AACF;;AACF;;AACF;;;;AA/IW;;AAAA;;AAwBA;;AAAA;;AAsBG;;AAAA;;AAKA;;AAAA;;AAEK;;AAAA;;AAIF;;AAAA;;AAIF;;AAAA;;AASiC;;AAAA;;AAEnC;;AAAA;;AAIF;;AAAA;;AAQP;;AAAA,uJAAqD,SAArD,EAAqD,6JAArD;;AAEK;;AAAA;;AASc;;AAAA;;AAGd;;AAAA;;AAiCE;;AAAA;;;;;;;;;;sEDpJEzC,gB,EAAgB;cAL5B,uDAK4B;eALlB;AACTrC,kBAAQ,EAAE,aADD;AAETC,qBAAW,EAAE,0BAFJ;AAGTC,mBAAS,EAAE,CAAC,yBAAD;AAHF,S;AAKkB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEd7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACGA;;AAAyB;;AAAI;;AAAa;;AAAK;;;;;;AAYzC;;AACE;;AAAI;;;;AAAyD;;AAC7D;;AAAI;;AAAsB;;AAC1B;;AAAI;;;;AAAyD;;AAC7D;;AAAI;;AAAsB;;AAC5B;;;;;;AAJM;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;;;;;AAfZ;;AACE;;AACE;;AACE;;AACE;;AAAI;;AAAI;;AACR;;AAAI;;AAAgB;;AACpB;;AAAI;;AAAK;;AACT;;AAAI;;AAAS;;AACf;;AACF;;AACA;;AACE;;AAMF;;AACF;;AACF;;;;;;AARU;;AAAA;;;;QDJG6E,qB,GAIX,+BACYC,qBADZ,EAEYhD,MAFZ,EAEmC;AAAA;;AAAA;;AADvB,WAAAgD,qBAAA,GAAAA,qBAAA;AACA,WAAAhD,MAAA,GAAAA,MAAA;AAEV,WAAKgD,qBAAL,CAA2BC,WAA3B,GAAyC5B,SAAzC,CACE,UAAE6B,aAAF,EAAsC;AACpC,cAAI,CAACC,YAAL,GAAoBD,aAApB;AACD,OAHH,EAGK,UAAA3B,KAAK,EAAI;AACV,cAAI,CAACvB,MAAL,CAAYuB,KAAZ,iDAA2DA,KAA3D;AACD,OALH;AAMD,K;;;uBAdUwB,qB,EAAqB,wJ,EAAA,yH;AAAA,K;;;YAArBA,qB;AAAqB,uC;AAAA,c;AAAA,a;AAAA,uG;AAAA;AAAA;ACVlC;;AAAI;;AAAU;;AACd;;AACA;;AACA;;;;AADG;;AAAA;;AACE;;AAAA;;;;;;;;;;sEDOQA,qB,EAAqB;cANjC,uDAMiC;eANvB;AACT/E,kBAAQ,EAAE,kBADD;AAETC,qBAAW,EAAE,+BAFJ;AAGTC,mBAAS,EAAE,CAAC,8BAAD;AAHF,S;AAMuB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEVlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACUwB;;AAA2C;;AAAY;;;;;;AAAZ;;AAAA;;;;;;;;AAHvD;;AACQ;;AAAoB;;AACpB;;AACI;;AACJ;;AACA;;AACA;;AAAM;;AAA4C;;AAAO;;AACzD;;AAEA;;AAAqC;AAAA;;AAAA;;AAAA;AAAA;;AAAiB;;AAAM;;AAC5D;;AAA+B;AAAA;;AAAA;;AAAA;AAAA;;AAAmB;;AAAQ;;AAC9D;;;;;;AARY;;AAAA;;AAGF;;AAAA;;;;;;AAmBN;;AACI;;AAAI;;;;AAA0D;;AAC9D;;AAAI;;AAAsB;;AAC1B;;AAAI;;;;AAAyD;;AAC7D;;AAAI;;AAAsB;;AAC9B;;;;;;AAJQ;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;;;;;AAfpB;;AACI;;AACI;;AACI;;AACI;;AAAI;;AAAI;;AACR;;AAAI;;AAAgB;;AACpB;;AAAI;;AAAK;;AACT;;AAAI;;AAAS;;AACjB;;AACJ;;AACA;;AACI;;AAMJ;;AACJ;;AACJ;;;;;;AARgB;;AAAA;;;;QDtBXkF,e;;;AAUX,+BAAoB1H,IAApB,EAAoC;AAAA;;AAAhB,aAAAA,IAAA,GAAAA,IAAA;AARb,aAAA2H,aAAA,GAA0B,EAA1B;AAQgC;;;;+BAEhCC,K,EAAK;AAAA;;AAER,eAAKC,QAAL,GAAgB,IAAIC,QAAJ,EAAhB;AAFQ;AAAA;AAAA;;AAAA;AAIR,iCAAiBF,KAAjB;AAAA,kBAASG,IAAT;AACI,mBAAKF,QAAL,CAAcG,MAAd,CAAqBD,IAAI,CAACjI,IAA1B,EAAgCiI,IAAhC;AADJ;AAJQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAOR,cAAME,aAAa,GAAG,IAAI,gEAAJ,CAAgB,MAAhB,EAAwB,YAAxB,EAAsC,KAAKJ,QAA3C,EAAqD;AAACK,0BAAc,EAAE;AAAjB,WAArD,CAAtB;AAEA,eAAKlI,IAAL,CAAUmI,OAAV,CAAkBF,aAAlB,EAAiCtC,SAAjC,CAA2C,UAAAyC,KAAK,EAAI;AAClD,oBAAOA,KAAK,CAACC,IAAb;AACI,mBAAK,mEAAcC,cAAnB;AACI,sBAAI,CAACC,QAAL,GAAgBC,IAAI,CAACC,KAAL,CAAW,MAAML,KAAK,CAACM,MAAZ,GAAmBN,KAAK,CAACO,KAApC,CAAhB;AACA;;AACJ,mBAAK,mEAAcC,QAAnB;AACI,sBAAI,CAACnB,YAAL,GAAoBW,KAAK,CAACS,IAA1B;AACA,sBAAI,CAAClB,aAAL,GAAqB,EAArB;AAFJ;AAAA;AAAA;;AAAA;AAGI,wCAAiBC,KAAjB;AAAA,wBAASG,IAAT;;AACI,0BAAI,CAACJ,aAAL,CAAmBmB,IAAnB,CAAwBf,IAAI,CAACjI,IAA7B;AADJ;AAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKI,sBAAI,CAACiJ,oBAAL,CAA0B,MAAI,CAACtB,YAA/B;;AACA;AAVR;AAYD,WAbD;AAcH;;;6CAEoBA,Y,EAAY;AAAA;;AAE/B,cAAMQ,aAAa,GAAG,IAAI,gEAAJ,CAAgB,MAAhB,EAAwB,sCAAxB,EAAgE,KAAKR,YAArE,CAAtB;AAEE,eAAKzH,IAAL,CAAUmI,OAAV,CAAkBF,aAAlB,EAAiCtC,SAAjC,CAA2C,UAAAyC,KAAK,EAAI;AAClD,oBAAOA,KAAK,CAACC,IAAb;AACI,mBAAK,mEAAcO,QAAnB;AACI,sBAAI,CAACI,eAAL,GAAuBZ,KAAK,CAACS,IAA7B;AACA;AAHR;AAKD,WAND;AAOH;;;+BAEG;AAEF,cAAMZ,aAAa,GAAG,IAAI,gEAAJ,CAAgB,MAAhB,EAAwB,kBAAxB,EAA4C,KAAKe,eAAjD,CAAtB;AAEE,eAAKhJ,IAAL,CAAUmI,OAAV,CAAkBF,aAAlB,EAAiCtC,SAAjC,CAA2C,UAAAyC,KAAK,EAAI;AAClD,oBAAOA,KAAK,CAACC,IAAb;AACI,mBAAK,mEAAcO,QAAnB;AACI,oBAAIR,KAAK,CAACa,EAAV,EACEC,KAAK,CAAC,cAAD,CAAL,CADF,KAGEA,KAAK,CAAC,yCAAD,CAAL;AACF;AANR;AAQD,WATD;AAUH;;;iCAEK;AAEJ,eAAKrB,QAAL,GAAgB,IAAIC,QAAJ,EAAhB;AACA,eAAKH,aAAL,GAAqB,EAArB;AACA,eAAKF,YAAL,GAAoB,IAApB;AACA,eAAK0B,IAAL,CAAUC,aAAV,CAAwBnD,KAAxB;AACD;;;;;;;uBAxEUyB,e,EAAe,gI;AAAA,K;;;YAAfA,e;AAAe,iC;AAAA;AAAA;;;;;;;;;;;;;;;;;ACX5B;;AAAI;;AAA0B;;AAC9B;;AACA;;AACI;;AACI;;AACI;;AAAkC;AAAA;;AAAA;;AAAA,mBAAU,IAAA2B,MAAA,YAAV;AAA4B,WAA5B;;AAAlC;;AACA;;AAEA;;AAYJ;;AAEA;;AAoBJ;;AACJ;;;;AAnCiB;;AAAA;;AAcwB;;AAAA;;;;;;;;;;sEDX5B3B,e,EAAe;cAL3B,uDAK2B;eALjB;AACTpF,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAKiB,Q;;;;;;gBAOzB,uD;iBAAU,M;;;;;;;;;;;;;;;;;;;;AElBb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAUa8G,c;;;AAKX,8BAAoBjF,WAApB,EACWhB,MADX,EAEYiB,MAFZ,EAEmC;AAAA;;AAFf,aAAAD,WAAA,GAAAA,WAAA;AACT,aAAAhB,MAAA,GAAAA,MAAA;AACC,aAAAiB,MAAA,GAAAA,MAAA;AALZ,aAAAiF,MAAA,GAAS,OAAT;AACA,aAAApJ,KAAA,GAAa,EAAb;AAIsC;;;;mCAE3B;AACT,cAAIK,YAAY,CAACO,OAAb,CAAqB,OAArB,KAAiC,IAArC,EAA2C;AACzC,iBAAKsC,MAAL,CAAYG,QAAZ,CAAqB,CAAC,YAAD,CAArB;AACD;AACF;;;gCAEO;AAAA;;AACN,eAAKa,WAAL,CAAiBmF,KAAjB,CAAuB,KAAKrJ,KAA5B,EACGwF,SADH,CAEI,YAAM;AACJ,kBAAI,CAACtC,MAAL,CAAYG,QAAZ,CAAqB,CAAC,YAAD,CAArB;;AACA,kBAAI,CAACc,MAAL,CAAY0C,OAAZ,CAAoB,oBAApB;AACD,WALL,EAMI,UAAAnB,KAAK,EAAI;AACP,kBAAI,CAACvB,MAAL,CAAYuB,KAAZ,CAAkB,uBAAlB;AACD,WARL;AAUD;;;;;;;uBA1BUyD,c,EAAc,0I,EAAA,uH,EAAA,yH;AAAA,K;;;YAAdA,c;AAAc,gC;AAAA,e;AAAA,a;AAAA,4wB;AAAA;AAAA;ACV3B;;AAAI;;AAAK;;AAET;;AACE;;AAA8C;AAAA,mBAAY,IAAAE,KAAA,EAAZ;AAAmB,WAAnB;;AAC5C;;AACA;;AAAuC;;AAAS;;AAChD;;AAAsC;;AAAO;;AAC7C;;AACE;AAAA;AAAA;;AADF;;AAEA;;AAAsC;;AAAQ;;AAC9C;;AACE;AAAA;AAAA;;AADF;;AAOA;;AAA6F;;AAAM;;AACnG;;AAAgC;;AAAiC;;AACjE;;AAA8C;AAAA,mBAAS,IAAAnG,MAAA,WAAiB,oBAAjB,EAAT;AAAgD,WAAhD;;AAAkD;;AACrF;;AACb;;AAEF;;;;;;AAfM;;AAAA;;AAGA;;AAAA;;AAMM;;AAAA;;;;;;;;;sEDPCiG,c,EAAc;cAL1B,uDAK0B;eALhB;AACThH,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,uBAAD;AAHF,S;AAKgB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEV3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACYU;;AAEE;;AACF;;;;;;AAMA;;AAEE;;AACF;;;;;;AACA;;AAEE;;AACF;;;;;;AAMA;;AAEE;;AACF;;;;;;AAQE;;AAEE;;AACF;;;;;;AACA;;AAEE;;AACF;;;;;;AAQA;;AAEE;;AACF;;;;;;AACA;;AAEE;;AACF;;;;;;;;;;QDvDCiH,qB;;;AAKX,qCAAoBpF,WAApB,EACWhB,MADX,EAEWyB,EAFX,EAGYR,MAHZ,EAGmC;AAAA;;AAHf,aAAAD,WAAA,GAAAA,WAAA;AACT,aAAAhB,MAAA,GAAAA,MAAA;AACA,aAAAyB,EAAA,GAAAA,EAAA;AACC,aAAAR,MAAA,GAAAA,MAAA;AACX;;;;mCAEU;AACT,eAAKc,UAAL;AACD;;;qCAEY;AACX,eAAKY,YAAL,GAAoB,KAAKlB,EAAL,CAAQoB,KAAR,CAAc;AAChCwD,oBAAQ,EAAE,CAAC,EAAD,EAAK,0DAAWvD,QAAhB,CADsB;AAEhCG,iBAAK,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWH,QAAZ,EAAsB,0DAAWG,KAAjC,CAAL,CAFyB;AAGhCqD,oBAAQ,EAAE,CAAC,EAAD,EAAK,0DAAWxD,QAAhB,CAHsB;AAIhCyD,qBAAS,EAAE,KAAK9E,EAAL,CAAQoB,KAAR,CAAc;AACvB2D,sBAAQ,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAW1D,QAAZ,EAAsB,0DAAWC,SAAX,CAAqB,CAArB,CAAtB,CAAL,CADa;AAEvB0D,6BAAe,EAAE,CAAC,EAAD,EAAK,0DAAW3D,QAAhB;AAFM,aAAd,EAGR;AAAE4D,uBAAS,EAAE,KAAKC;AAAlB,aAHQ;AAJqB,WAAd,CAApB;AASD;;;uCAEclF,E,EAAe;AAC5B,cAAMmF,gBAAgB,GAAGnF,EAAE,CAACzD,GAAH,CAAO,iBAAP,CAAzB;;AACA,cAAI4I,gBAAgB,CAACC,MAAjB,IAA2B,IAA3B,IAAmC,cAAcD,gBAAgB,CAACC,MAAtE,EAA8E;AAC5E,gBAAIpF,EAAE,CAACzD,GAAH,CAAO,UAAP,EAAmB1B,KAAnB,KAA6BsK,gBAAgB,CAACtK,KAAlD,EAAyD;AACvDsK,8BAAgB,CAACE,SAAjB,CAA2B;AAAEC,wBAAQ,EAAE;AAAZ,eAA3B;AACD,aAFD,MAEO;AACLH,8BAAgB,CAACE,SAAjB,CAA2B,IAA3B;AACD;AACF;AACF;;;2CAEkB;AAAA;;AACjB,cAAI,KAAKnE,YAAL,CAAkBqE,KAAtB,EAA6B;AAC3B,iBAAK9J,IAAL,GAAYmG,MAAM,CAACC,MAAP,CACV;AAAEkD,sBAAQ,EAAE,KAAK7D,YAAL,CAAkB3E,GAAlB,CAAsB,oBAAtB,EAA4C1B;AAAxD,aADU,EAEV,KAAKqG,YAAL,CAAkBrG,KAFR,CAAZ;AAGA,iBAAK0E,WAAL,CAAiBiG,QAAjB,CAA0B,KAAK/J,IAA/B,EAAqCoF,SAArC,CACE,YAAM;AACJ,qBAAI,CAACtC,MAAL,CAAYG,QAAZ,CAAqB,CAAC,aAAD,CAArB;;AACA,qBAAI,CAACc,MAAL,CAAY0C,OAAZ,CAAoB,oBAApB;AACD,aAJH,EAIK,UAAAnB,KAAK,EAAI;AACV,kBAAM0E,IAAI,GAAG1E,KAAK,CAACA,KAAnB;AACA0E,kBAAI,CAACC,OAAL,CAAa,UAAAC,OAAO,EAAI;AACtB,wBAAQA,OAAO,CAACpL,IAAhB;AACE,uBAAK,mBAAL;AACE,2BAAI,CAACiF,MAAL,CAAYuB,KAAZ,CAAkB,qBAAlB;;AACA;;AACF;AACE,2BAAI,CAACvB,MAAL,CAAYuB,KAAZ,kCAA4C4E,OAAO,CAACpL,IAApD;;AACA;AANJ;AAQD,eATD;AAUD,aAhBH;AAmBD;AACF;;;;;;;uBA/DUoK,qB,EAAqB,0I,EAAA,uH,EAAA,2H,EAAA,yH;AAAA,K;;;YAArBA,qB;AAAqB,uC;AAAA,e;AAAA,c;AAAA,qjC;AAAA;AAAA;ACZlC;;AACI;;AACE;;AACE;;AAAI;;AAAmB;;AACzB;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAc;;AAAc;;AAC5B;;AAEA;;AAIF;;AACA;;AACE;;AAAc;;AAAM;;AACpB;;AAEA;;AAIA;;AAIF;;AACA;;AACE;;AAAc;;AAAQ;;AACtB;;AAEA;;AAIF;;AACA;;AACE;;AACE;;AAAc;;AAAM;;AACpB;;AAGA;;AAIA;;AAIF;;AACA;;AACE;;AAAc;;AAAgB;;AAC9B;;AAIA;;AAIA;;AAIF;;AACF;;AACA;;AACE;;AACE;;AACE;AAAA,mBAAS,IAAAiB,gBAAA,EAAT;AAA2B,WAA3B;;AAA6B;;AAAQ;;AACzC;;AACF;;AACF;;AACF;;AACF;;;;AAvEU;;AAAA;;AAGiE;;AAAA;;AAE9D;;AAAA;;AAO2D;;AAAA;;AAE3D;;AAAA;;AAIA;;AAAA;;AAO8D;;AAAA;;AAE9D;;AAAA;;AAQoE;;AAAA;;AAGlE;;AAAA;;AAIA;;AAAA;;AAOyE;;AAAA;;AAIzE;;AAAA;;AAIA;;AAAA;;AAQ4C;;AAAA;;;;;;;;;sED5DhDjB,qB,EAAqB;cALjC,uDAKiC;eALvB;AACTnH,kBAAQ,EAAE,kBADD;AAETC,qBAAW,EAAE,+BAFJ;AAGTC,mBAAS,EAAE,CAAC,8BAAD;AAHF,S;AAKuB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEZlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOamI,a;;;AAEX,+BAAc;AAAA;AAAG;;;;mCAEN,CACV;;;;;;;uBALUA,a;AAAa,K;;;YAAbA,a;AAAa,+B;AAAA,c;AAAA,a;AAAA,gC;AAAA;AAAA;ACP1B;;AACE;;AACF;;;;;;;;;sEDKaA,a,EAAa;cALzB,uDAKyB;eALf;AACTrI,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,uBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKe,Q;;;;;;;;;;;;;;;;;;;;AEP1B;AAAA;;;AAAA;AAAA;AAAA;;QAAaoI,S;;;;AACO,cAAAC,QAAA,GAAW,YAAX;AACA,cAAAhL,aAAA,aAAmB+K,SAAS,CAACC,QAA7B;;;;;;;;;;;;;;;;ACFpB;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMC,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,EACGC,KADH,CACS,UAAAjH,GAAG;AAAA,aAAI7C,OAAO,CAAC0E,KAAR,CAAc7B,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DatePipe } from '@angular/common';\r\n\r\nimport { Constants } from '../util/Constants';\r\n\r\n@Pipe({\r\n  name: 'DateTimeFormatPipe'\r\n})\r\nexport class DateTimeFormatPipePipe extends DatePipe implements PipeTransform {\r\n  transform(value: any, args?: any): any {\r\n    return super.transform(value, Constants.DATE_TIME_FMT);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  baseURL = 'https://localhost:44391/api/user/';\n  jwtHelper = new JwtHelperService();\n  decodedToken: any;\n\n  constructor(private http: HttpClient) { }\n\n  login(model: any) {\n    return this.http\n      .post(`${this.baseURL}login`, model).pipe(\n        map((response: any) => {\n          const user = response;\n          if (user) {\n            localStorage.setItem('token', user.token);\n            this.decodedToken = this.jwtHelper.decodeToken(user.token);\n            sessionStorage.setItem('username', this.decodedToken.unique_name);\n          }\n        })\n      );\n  }\n\n  register(model: any) {\n    return this.http.post(`${this.baseURL}register`, model);\n  }\n\n  loggedIn() {\n    const token = localStorage.getItem('token');\n    return !this.jwtHelper.isTokenExpired(token);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Players } from '../_models/players';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlayersService {\n  baseURL = 'https://localhost:44391/api/players';\n  tokenHeader: HttpHeaders;\n  \n  constructor(private http: HttpClient) { }\n  getAllPlayers(): Observable<Players[]> {\n    console.log(\"aqui\")\n    return this.http.get<Players[]>(this.baseURL);\n  }\n  getPlayersById(id: number): Observable<Players> {\n    return this.http.get<Players>(`${this.baseURL}/getByNome/${id}`);\n  }\n  postPlayers(players: Players) {\n    console.log(players)\n    return this.http.post(this.baseURL, players);\n  }\n  putPlayers(players: Players) {\n    return this.http.put(`${this.baseURL}/${players.id}`, players);\n  }\n  deletePlayers(id: number) {\n    return this.http.delete(`${this.baseURL}/${id}`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { TransactionOfx } from '../_models/transactionOfx';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TransactionOfxService {\n  baseURL = 'https://localhost:44391/api/players';\n  tokenHeader: HttpHeaders;\n  \n  constructor(private http: HttpClient) { }\n\n  transaction(): Observable<TransactionOfx[]> {\n    return this.http.get<TransactionOfx[]>(this.baseURL);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { UserComponent } from './user/user.component';\nimport { LoginComponent } from './user/login/login.component';\nimport { RegistrationComponent } from './user/registration/registration.component';\nimport { AuthGuard } from './auth/auth.guard';\nimport { PlayersComponent } from './players/players.component';\nimport { UploadComponent } from './upload/upload.component';\nimport { TransactionsComponent } from './transactions/transactions.component';\n\nconst routes: Routes = [\n  {\n    path: 'user', component: UserComponent,\n    children: [\n      { path: 'login', component: LoginComponent },\n      { path: 'registration', component: RegistrationComponent }\n    ]\n  },\n  {path: 'players', component: PlayersComponent, canActivate: [AuthGuard]},\n  {path: 'upload', component: UploadComponent, canActivate: [AuthGuard]},\n  {path: 'transaction', component: TransactionsComponent, canActivate: [AuthGuard]},\n  {path: 'dashboard', component: DashboardComponent, canActivate: [AuthGuard]},\n\n   {path: '', redirectTo: 'dashboard', pathMatch: 'full'},\n   {path: '**', redirectTo: 'dashboard', pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'NiboDevelopersChallenge2-App';\n}\n","<app-nav></app-nav>\n<div class=\"container\" style=\"font-family: Helvetica;\"> \n  <router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BsDropdownModule, TooltipModule, ModalModule, TabsModule} from 'ngx-bootstrap';\nimport { BsDatepickerModule} from 'ngx-bootstrap/datepicker';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToastrModule } from 'ngx-toastr';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { PlayersComponent } from './players/players.component';\nimport { PlayersService } from './_services/players.service';\nimport { NavComponent } from './nav/nav.component';\nimport { DateTimeFormatPipePipe } from './_helpers/DateTimeFormatPipe.pipe';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { UserComponent } from './user/user.component';\nimport { LoginComponent } from './user/login/login.component';\nimport { RegistrationComponent } from './user/registration/registration.component';\nimport { AuthInterceptor } from './auth/auth.interceptor';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TransactionsComponent } from './transactions/transactions.component';\nimport { UploadComponent } from './upload/upload.component';\n\nconst routes: Routes = [];\n@NgModule({\n   declarations: [\n      AppComponent,\n      DashboardComponent,\n      NavComponent,\n      DateTimeFormatPipePipe,\n      UserComponent,\n      LoginComponent,\n      RegistrationComponent,\n      PlayersComponent,\n      TransactionsComponent,\n      UploadComponent\n      ],\n   imports: [\n      BrowserModule,\n      BsDropdownModule.forRoot(),\n      BsDatepickerModule.forRoot(),\n      TooltipModule.forRoot(),\n      ModalModule.forRoot(),\n      BrowserAnimationsModule,\n      ToastrModule.forRoot({\n         timeOut: 3000,\n         preventDuplicates: true,\n         progressBar: true\n      }),\n      AppRoutingModule,\n      HttpClientModule,\n      FormsModule,\n      ReactiveFormsModule,\n      RouterModule.forRoot(routes, { useHash: true }),\n   ],\n   providers: [\n      PlayersService,\n      {\n         provide: HTTP_INTERCEPTORS,\n         useClass: AuthInterceptor,\n         multi: true\n      },\n   ],\n   bootstrap: [\n      AppComponent\n   ]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(private router: Router) {}\r\n\r\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n    if (localStorage.getItem('token') !== null) {\r\n      return true;\r\n    } else {\r\n      this.router.navigate(['/user/login']);\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpEvent, HttpRequest, HttpHandler } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/internal/operators/tap';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n    constructor(private router: Router) { }\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        if (localStorage.getItem('token') !== null) {\r\n            const cloneReq = req.clone({\r\n                headers: req.headers.set('Authorization', `Bearer ${localStorage.getItem('token')}`)\r\n            });\r\n            return next.handle(cloneReq).pipe(\r\n                tap(\r\n                    succ => { },\r\n                    err => {\r\n                        if (err.status === 401) {\r\n                            this.router.navigateByUrl('user/login');\r\n                        }\r\n                    }\r\n                )\r\n            );\r\n        } else {\r\n            return next.handle(req.clone());\r\n        }\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>dashboard works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../_services/auth.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n\n  constructor(public authService: AuthService\n    , public router: Router\n    , private toastr: ToastrService) { }\n\n  ngOnInit() {\n  }\n\n  showMenu() {\n    return this.router.url !== '/user/login';\n  }\n\n  loggedIn() {\n    return this.authService.loggedIn();\n  }\n\n  entrar() {\n    this.router.navigate(['/user/login']);\n  }\n\n  logout() {\n    localStorage.removeItem('token');\n    this.toastr.show('Log Out');\n    this.router.navigate(['/user/login']);\n  }\n\n  userName() {\n    return sessionStorage.getItem('username');\n  }\n}\n","<nav class=\"navbar navbar-expand-md navbar-dark bg-dark\" *ngIf=\"showMenu()\">\n    <div class=\"container\">\n      <a class=\"navbar-brand\" routerLink=\"dashboard\">DevelopersChallenge2</a>\n      <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarsExampleDefault\"\n        aria-controls=\"navbarsExampleDefault\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n      </button>\n  \n      <div *ngIf=\"loggedIn()\" class=\"collapse navbar-collapse\" id=\"navbarsExampleDefault\">\n        <ul class=\"navbar-nav mr-auto\">\n          <li class=\"nav-item\" routerLinkActive=\"active\">\n            <a class=\"nav-link\" routerLink=\"players\">Jogadores</a>\n          </li>\n          <li class=\"nav-item\" routerLinkActive=\"active\">\n            <a class=\"nav-link\" routerLink=\"transactions\">Transações</a>\n          </li>\n          <li class=\"nav-item\" routerLinkActive=\"active\">\n            <a class=\"nav-link\" routerLink=\"upload\">Upload</a>\n          </li>\n        </ul>\n      </div>\n  \n      <ul *ngIf=\"loggedIn()\" class=\"navbar-nav\">\n        <li class=\"nav-item dropdown\" dropdown>\n          <a dropdownToggle class=\"nav-link dropdown-toggle\" id=\"navbarDropdownMenuLink\" data-toggle=\"dropdown\"\n            aria-haspopup=\"true\" aria-expanded=\"false\" style=\"cursor: pointer; text-transform: capitalize;\">\n            {{userName()}}\n          </a>\n          <div *dropdownMenu class=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\n            <a class=\"dropdown-item\">\n              Perfil\n            </a>\n            <div role=\"separator\" class=\"divider\"></div>\n            <a class=\"dropdown-item\" (click)=\"logout()\" style=\"cursor: pointer\">\n              Sair\n            </a>\n          </div>\n        </li>\n      </ul>\n      <button *ngIf=\"!loggedIn()\" class=\"btn btn-success\" (click)=\"entrar()\">Entrar</button>\n    </div>\n  </nav>\n  ","import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { PlayersService } from '../_services/players.service';\nimport { Players } from '../_models/players';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { defineLocale, BsLocaleService, ptBrLocale, BsModalService } from 'ngx-bootstrap';\nimport { ToastrService } from 'ngx-toastr';\n\ndefineLocale('pt-br', ptBrLocale);\n\n@Component({\n  selector: 'app-players',\n  templateUrl: './players.component.html',\n  styleUrls: ['./players.component.css']\n})\nexport class PlayersComponent implements OnInit {\n\n  players: Players[];\n  player: Players;\n  modoSalve = 'post';\n  mostrarImagem = false;\n  registerForm: FormGroup;\n  bodyDeletePlayer = '';\n  date: string;\n  \n  constructor(\n    private playersService: PlayersService\n    , private modalService: BsModalService\n    , private fb: FormBuilder\n    , private localeService: BsLocaleService\n    , private toastr: ToastrService\n    ){\n      this.localeService.use('pt-br');\n    }\n    \n    ngOnInit() {\n      this.validation();\n      this.getPlayers();\n    }\n    \n    getPlayers() {\n      this.date = new Date().getMilliseconds().toString();\n      this.playersService.getAllPlayers().subscribe(\n        ( _players: Players[]) => {\n          this.players = _players;\n        }, error => {\n          this.toastr.error(`Erro ao tentar carregar os jogadores: ${error}`);\n        });\n      }\n      newPlayer(template: any) {\n        this.modoSalve = 'post';\n        this.openModal(template);\n      }\n      openModal(template: any) {\n        this.registerForm.reset();\n        template.show();\n      }\n      validation() {\n        this.registerForm = this.fb.group({\n          name: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(50)]],\n          email: ['', [Validators.required, Validators.email]],\n          favoriteGame: ['', Validators.required],\n          birthDate:['', Validators.required]\n        });\n      }\n      editPlayer(player: Players, template: any) {\n        this.modoSalve = 'put';\n        this.openModal(template);\n        this.player = Object.assign({}, player);\n        console.log(\"modal\",this.player)\n        this.registerForm.patchValue(this.players);\n      }\n      \n      deletePlayer(players: Players, template: any) {\n        this.openModal(template);\n        this.player = players;\n        this.bodyDeletePlayer = `Tem certeza que deseja excluir o jogador: ${players.name}`;\n      }\n      insertPlayer(template: any) {\n        if (this.modoSalve === 'post') {\n          this.player = Object.assign({}, this.registerForm.value);\n          console.log(\"Caiu no insert\", this.player)\n          this.playersService.postPlayers(this.player).subscribe(\n            (newPlayer: Players) => {\n              template.hide();\n              this.getPlayers();\n              this.toastr.success('Inserido com Sucesso!');\n            }, error => {\n              this.toastr.error(`Erro ao Inserir: ${error}`);\n            }\n            );\n          } else {\n            this.player = Object.assign({ id: this.player.id }, this.registerForm.value);\n            this.playersService.putPlayers(this.player).subscribe(\n              () => {\n                template.hide();\n                this.getPlayers();\n                this.toastr.success('Editado com Sucesso!');\n              }, error => {\n                this.toastr.error(`Erro ao Editar: ${error}`);\n              }\n              );\n            }\n          }\n          confirmeDelete(template: any) {\n            this.playersService.deletePlayers(this.player.id).subscribe(\n              () => {\n                template.hide();\n                this.getPlayers();\n                this.toastr.success('Deletado com Sucesso');\n              }, error => {\n                this.toastr.error('Erro ao tentar Deletar');\n                console.log(error);\n              });\n            }\n          }\n          ","<h2>\n  Jogadores</h2>\n  <hr> \n  \n  <div class=\"d-flex\">\n    \n    <!-- <div class=\"form-inline mr-auto\">\n      <div class=\"form-group mb-2\">\n        <label class=\"mr-2\">Filtro:</label> <input type=\"text\" class=\"form-control mr-2\" placeholder=\"buscar\"\n        [(ngModel)]=\"filtroLista\">\n      </div>\n    </div> -->\n    <div>\n      <button class=\"btn btn-outline-primary\" (click)=\"newPlayer(template)\">\n        <i class=\"fa fa-plus-circle\"></i>&nbsp;\n        Novo Jogador\n      </button>\n    </div>\n  </div>\n  <!-- <h3>Filtro: {{filtroLista}}</h3> -->\n  <table class=\"table table-striped\">\n    <thead class=\"thead-light\">\n      <tr>\n        <th>#</th>\n        <th>Nome</th>\n        <th>E-mail</th>\n        <th>Jogo Favorito</th>\n        <th>Data de nascimento</th>\n        <th colspan=\"2\"></th>\n      </tr>\n    </thead>\n    <tbody *ngIf=\"players && players.length\">\n      <tr *ngFor=\"let player of players\">\n        <td>{{player.id}}</td>\n        <td>{{player.name}}</td>\n        <td>{{player.email}}</td>\n        <td>{{player.favoriteGame}}</td>\n        <td>{{player.birthDate | DateTimeFormatPipe}}</td>\n        <td>\n          <div *ngIf=\"!player.name.length\">\n            Não Informado\n          </div>\n        </td>\n        <td>\n          <div class=\"btn-group\">\n            <button class=\"btn btn-sm btn-success\" tooltip=\"Editar\" (click)=\"editPlayer(player, template)\">\n              <i class=\"fa fa-edit\"></i>\n            </button>\n            <button class=\"btn btn-sm btn-danger\" tooltip=\"Excluir\" (click)=\"deletePlayer(player, confirm)\">\n              <i class=\"fa fa-eraser\"></i>\n            </button>\n          </div>\n        </td>\n      </tr>\n    </tbody>\n    <tfoot *ngIf=\"!players\">\n      <tr>\n        <td colspan=\"7\" class=\"text-center\">\n          <h4>\n            Nenhum jogador encontrado!\n          </h4>\n        </td>\n      </tr>\n    </tfoot>\n  </table>\n  \n  <div bsModal #template=\"bs-modal\" class=\"modal fade\" tabindex=\"-1\"\n  role=\"dialog\" aria-labelledby=\"dialog-sizes-name1\">\n  <div class=\"modal-dialog modal-lg\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h4 id=\"dialog-sizes-name1\" class=\"modal-title pull-left\">Cadastrar Stats</h4>\n        <button type=\"button\" class=\"close pull-right\" (click)=\"template.hide()\" aria-label=\"Close\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <form [formGroup]=\"registerForm\">\n          <div class=\"form-row\">\n            <div class=\"form-group col-md-12\">\n              <label>Nome</label>\n              <input type=\"text\" class=\"form-control\"\n              [ngClass]=\"{'is-invalid': registerForm.get('name').errors && registerForm.get('name').touched}\"\n              formControlName=\"name\" placeholder=\"Insira o name\">\n              <div *ngIf=\"registerForm.get('name').hasError('required')\n              && registerForm.get('name').touched\" class=\"invalid-feedback\">\n              Nome é obrigatório.\n            </div>\n            <div *ngIf=\"registerForm.get('name').hasError('minlength')\n            && registerForm.get('name').touched\" class=\"invalid-feedback\">\n            Nome deve ter no mínimo 4 Caracters.\n          </div>\n          <div *ngIf=\"registerForm.get('name').hasError('maxlength')\n          && registerForm.get('name').touched\" class=\"invalid-feedback\">\n          Nome deve ter no máximo 50 Caracters.\n        </div>\n      </div>\n    </div>\n    <div class=\"form-row\">\n      <div class=\"form-group col-md-8\">\n        <label>Email</label>\n        <input type=\"text\" class=\"form-control\" [ngClass]=\"{'is-invalid': registerForm.get('email').errors \n        && registerForm.get('email').touched}\" formControlName=\"email\" placeholder=\"Insira o E-mail\">\n        <div *ngIf=\"registerForm.get('email').hasError('required')\n        && registerForm.get('email').touched\" class=\"invalid-feedback\">\n        Email é obrigatório.\n      </div>\n      <div *ngIf=\"registerForm.get('email').hasError('email')\n      && registerForm.get('email').touched\" class=\"invalid-feedback\">\n      Deve ser um e-mail válido.\n    </div>\n  </div>\n  <div class=\"form-group col-md-4\">\n    <label>Data de nascimento</label>\n    <input type=\"datetime\" class=\"form-control\" bsDatepicker\n    [bsConfig]=\"{ dateInputFormat : 'DD/MM/YYYY hh:mm' }\" [ngClass]=\"{'is-invalid': registerForm.get('birthDate').errors\n    && registerForm.get('birthDate').touched}\" formControlName=\"birthDate\" placeholder=\"Data de nascimento\">\n    <div *ngIf=\"registerForm.get('birthDate').hasError('required')\n    && registerForm.get('birthDate').touched\" class=\"invalid-feedback\">\n    Data é obrigatório.\n  </div>\n</div>\n</div>\n<div class=\"form-row\">\n  <div class=\"form-group col-md-3\">\n    <label>Jogo Favorito</label>\n    <input type=\"text\" [ngClass]=\"{'is-invalid': registerForm.get('favoriteGame').errors \n    && registerForm.get('favoriteGame').touched}\" class=\"form-control is-invalid\" formControlName=\"favoriteGame\"\n    placeholder=\"Jogo Favorito\">\n    <div *ngIf=\"registerForm.get('favoriteGame').hasError('required')\n    && registerForm.get('favoriteGame').touched\" class=\"invalid-feedback\">\n    Jogo favorito é obrigatório.\n  </div>\n</div>\n</div>\n</form>\n</div>\n<div class=\"modal-footer d-flex\">\n  <button class=\"btn btn-secondary\" (click)=\"template.hide()\">\n    Fechar\n  </button>\n  <button class=\"btn btn-primary ml-auto\" (click)=\"insertPlayer(template)\">\n    Salvar Alterações\n  </button>\n</div>\n</div>\n</div>\n</div>\n\n\n<div bsModal #confirm=\"bs-modal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"dialog-sizes-name1\">\n  <div class=\"modal-dialog modal-sm\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h4 class=\"modal-title pull-left\">\n          Deletando Evento\n        </h4>\n        <button type=\"button\" class=\"close pull-right\" (click)=\"confirm.hide()\" aria-label=\"Close\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{bodyDeletePlayer}}</p>\n      </div>\n      <div class=\"modal-footer btn-group d-flex\">\n        <button type=\"button\" class=\"btn btn-outline-primary\" (click)=\"confirm.hide()\">\n          CANCELAR\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"confirmeDelete(confirm)\">\n          DELETAR\n        </button>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, Inject } from '@angular/core';\nimport { TransactionOfx } from '../_models/transactionOfx';\nimport { TransactionOfxService } from '../_services/transaction-ofx.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-transactions',\n  templateUrl: './transactions.component.html',\n  styleUrls: ['./transactions.component.css']\n})\n\nexport class TransactionsComponent {\n  [x: string]: any;\n  public transactions: TransactionOfx[];\n\n  constructor(  \n      private transactionOfxService: TransactionOfxService\n    , private toastr: ToastrService) {\n\n    this.transactionOfxService.transaction().subscribe(\n      ( _transactions: TransactionOfx[]) => {\n        this.transactions = _transactions;\n      }, error => {\n        this.toastr.error(`Erro ao tentar carregar os jogadores: ${error}`);\n      });\n  }\n}\n","  \n<h2>Transações</h2>\n<hr>\n<p *ngIf=\"!transactions\"><em>Carregando...</em></p>\n<div *ngIf=\"transactions\">\n  <table class='table table-striped'>\n    <thead class=\"thead-light\">\n      <tr>\n        <th>Data</th>\n        <th>Tipo de operação</th>\n        <th>Valor</th>\n        <th>Descrição</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let transaction of transactions\">\n        <td>{{ transaction.datePosted | date:'dd/MM/yyyy hh:mm:ss' }}</td>\n        <td>{{ transaction.type }}</td>\n        <td>{{ transaction.transactionAmount | currency:'BRL':true }}</td>\n        <td>{{ transaction.memo }}</td>\n      </tr>\n    </tbody>\n  </table>\n</div>","  \nimport { Component, ViewChild } from '@angular/core';\nimport { HttpClient, HttpRequest, HttpEventType, HttpResponse } from '@angular/common/http';\nimport { TransactionOfx } from '../_models/transactionOfx';\nimport { format } from 'util';\n\n@Component({\n  selector: 'app-upload',\n  templateUrl: './upload.component.html',\n  styleUrls: ['./upload.component.css']\n})\nexport class UploadComponent {\n  public progress: number;\n  public importedFiles: string[] = [];\n  public transactions: TransactionOfx[];\n  public newTransactions: TransactionOfx[];\n\n  private formData: FormData;\n  @ViewChild('form')\n  private form;\n\n  constructor(private http: HttpClient){}\n\n  upload(files)\n  {\n      this.formData = new FormData();\n\n      for (let file of files)\n          this.formData.append(file.name, file);\n      \n      const uploadRequest = new HttpRequest('POST', 'api/upload', this.formData, {reportProgress: true});\n\n      this.http.request(uploadRequest).subscribe(event => {\n        switch(event.type){\n            case HttpEventType.UploadProgress:\n                this.progress = Math.round(100 * event.loaded/event.total);\n                break;\n            case HttpEventType.Response:\n                this.transactions = event.body as TransactionOfx[];\n                this.importedFiles = [];\n                for (let file of files)\n                    this.importedFiles.push(file.name);\n                this.checkNewTransactions(this.transactions);\n                break;\n        }\n      });\n  }\n\n  checkNewTransactions(transactions)\n  {\n    const uploadRequest = new HttpRequest('POST', 'api/Transaction/CheckNewTransactions', this.transactions);\n\n      this.http.request(uploadRequest).subscribe(event => {\n        switch(event.type){\n            case HttpEventType.Response:\n                this.newTransactions = event.body as TransactionOfx[];\n                break;\n        }\n      });\n  }\n\n  save()\n  {\n    const uploadRequest = new HttpRequest('POST', 'api/Transaction/', this.newTransactions);\n\n      this.http.request(uploadRequest).subscribe(event => {\n        switch(event.type){\n            case HttpEventType.Response:\n                if (event.ok)\n                  alert('Dados salvos');\n                else\n                  alert('Ocorreu um erro ao salvar as transações');\n                break;\n        }\n      });\n  }\n\n  cancel()\n  {\n    this.formData = new FormData();\n    this.importedFiles = [];\n    this.transactions = null;\n    this.form.nativeElement.reset();\n  }\n}\n","<h1>Importação de arquivos OFX</h1>\n<br />\n<form #form>\n    <div class=\"row\">\n        <div class=\"col-md-4\">\n            <input #file type=\"file\" multiple (change)=\"upload(file.files)\" />\n            <br />\n\n            <div *ngIf=\"importedFiles.length > 0\">\n                    Arquivos importados:<br />\n                    <ul>\n                        <li *ngFor=\"let fileName of importedFiles\">{{fileName}}</li>\n                    </ul>\n                    <br />\n                    <span>Total de transações: {{transactions.length}}</span><br/>\n                    <br/>\n\n                    <button class=\"btn btn-success mr-1\" (click)=\"save()\">Salvar</button>\n                    <button class=\"btn btn-danger\" (click)=\"cancel()\">Cancelar</button>\n                </div>\n        </div>\n        \n        <div class=\"col-md-8 scrollable\" *ngIf=\"transactions\">\n            <table class='table table-striped'>\n                <thead class=\"thead-light\">\n                    <tr>\n                        <th>Data</th>\n                        <th>Tipo de operação</th>\n                        <th>Valor</th>\n                        <th>Descrição</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let transaction of transactions\">\n                        <td>{{ transaction.datePosted  | date:'dd/MM/yyyy hh:mm:ss' }}</td>\n                        <td>{{ transaction.type }}</td>\n                        <td>{{ transaction.transactionAmount | currency:'BRL':true }}</td>\n                        <td>{{ transaction.memo }}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</form>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { AuthService } from 'src/app/_services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  titulo = 'Login';\n  model: any = {};\n\n  constructor(private authService: AuthService\n    , public router: Router\n    , private toastr: ToastrService) { }\n\n  ngOnInit() {\n    if (localStorage.getItem('token') != null) {\n      this.router.navigate(['/dashboard']);\n    }\n  }\n\n  login() {\n    this.authService.login(this.model)\n      .subscribe(\n        () => {\n          this.router.navigate(['/dashboard']);\n          this.toastr.success('Logado com Sucesso');\n        },\n        error => {\n          this.toastr.error('Falha ao tentar Logar');\n        }\n      );\n  }\n\n}\n","<h2>Login</h2>\n\n<body class=\"text-center\" data-gr-c-s-loaded=\"true\">\n  <form class=\"form-signin\" #loginForm=\"ngForm\" (ngSubmit)=\"login()\">\n    <img class=\"mb-4\" src=\"\" alt=\"\" width=\"72\" height=\"72\">\n    <h1 class=\"h3 mb-3 font-weight-normal\">Por favor</h1>\n    <label for=\"username\" class=\"sr-only\">Usuário</label>\n    <input type=\"email\" id=\"username\" class=\"form-control\" placeholder=\"Usuário\" name=\"username\" required\n      [(ngModel)]=\"model.username\">\n    <label for=\"password\" class=\"sr-only\">Password</label>\n    <input type=\"password\" id=\"password\" class=\"form-control\" placeholder=\"Senha\" name=\"password\" required\n      [(ngModel)]=\"model.password\">\n    <!--div class=\"checkbox mb-3\">\n      <label>\n        <input type=\"checkbox\" value=\"remember-me\"> Remember me\n      </label>\n    </div-->\n    <button [disabled]=\"!loginForm.valid\" class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Entrar</button>\n    <p class=\"mt-5 mb-3 text-muted\">Não tem login? Cadastre-se abaixo</p>\n    <button class=\"btn btn-lg btn-link btn-block\" (click)=\"router.navigate(['/user/registration'])\">Quero me\n      cadastrar</button>\n  </form>\n\n</body>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { User } from 'src/app/_models/User';\nimport { AuthService } from 'src/app/_services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent implements OnInit {\n\n  registerForm: FormGroup;\n  user: User;\n\n  constructor(private authService: AuthService\n    , public router: Router\n    , public fb: FormBuilder\n    , private toastr: ToastrService) {\n  }\n\n  ngOnInit() {\n    this.validation();\n  }\n\n  validation() {\n    this.registerForm = this.fb.group({\n      fullName: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      userName: ['', Validators.required],\n      passwords: this.fb.group({\n        password: ['', [Validators.required, Validators.minLength(4)]],\n        confirmPassword: ['', Validators.required]\n      }, { validator: this.compararSenhas })\n    });\n  }\n\n  compararSenhas(fb: FormGroup) {\n    const confirmSenhaCtrl = fb.get('confirmPassword');\n    if (confirmSenhaCtrl.errors == null || 'mismatch' in confirmSenhaCtrl.errors) {\n      if (fb.get('password').value !== confirmSenhaCtrl.value) {\n        confirmSenhaCtrl.setErrors({ mismatch: true });\n      } else {\n        confirmSenhaCtrl.setErrors(null);\n      }\n    }\n  }\n\n  cadastrarUsuario() {\n    if (this.registerForm.valid) {\n      this.user = Object.assign(\n        { password: this.registerForm.get('passwords.password').value },\n        this.registerForm.value);\n      this.authService.register(this.user).subscribe(\n        () => {\n          this.router.navigate(['/user/login']);\n          this.toastr.success('Cadastro Realizado');\n        }, error => {\n          const erro = error.error;\n          erro.forEach(element => {\n            switch (element.code) {\n              case 'DuplicateUserName':\n                this.toastr.error('Cadastro Duplicado!');\n                break;\n              default:\n                this.toastr.error(`Erro no Cadatro! CODE: ${element.code}`);\n                break;\n            }\n          });\n        }\n\n      );\n    }\n  }\n\n}\n","<div class=\"row mt-4\">\n    <div class=\"col-md-6\" style=\"height: 450px;\">\n      <div class=\"row col-md-12 my-auto side-heder\">\n        <h1>Cadastro de Usuário</h1>\n      </div>\n    </div>\n    <div class=\"col-md-6\">\n      <form [formGroup]=\"registerForm\">\n        <div class=\"form-group required\">\n          <label for=\"\">Nome Completo:</label>\n          <input type=\"text\" class=\"form-control\" formControlName=\"fullName\" [ngClass]=\"{'is-invalid': registerForm.get('fullName').errors &&\n                                    registerForm.get('fullName').touched }\" placeholder=\"Insira o Nome Completo\" />\n          <div *ngIf=\"registerForm.get('fullName').hasError('required') &&\n                      registerForm.get('fullName').touched\" class=\"invalid-feedback\">\n            Nome Completo é obrigatório.\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"\">Email:</label>\n          <input class=\"form-control\" type=\"text\" formControlName=\"email\" [ngClass]=\"{ 'is-invalid': registerForm.get('email').errors && \n                                       registerForm.get('email').touched}\" placeholder=\"Insira o Nome Completo\" />\n          <div *ngIf=\"registerForm.get('email').hasError('required') &&\n                      registerForm.get('email').touched\" class=\"invalid-feedback\">\n            email é obrigatório.\n          </div>\n          <div *ngIf=\"registerForm.get('email').hasError('email')\n          && registerForm.get('email').touched\" class=\"invalid-feedback\">\n            Deve ser um e-mail válido.\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"\">Usuario:</label>\n          <input class=\"form-control\" type=\"text\" formControlName=\"userName\" [ngClass]=\"{'is-invalid': registerForm.get('userName').errors &&\n                                      registerForm.get('userName').touched}\" placeholder=\"Insira o nome de Usuário\" />\n          <div *ngIf=\"registerForm.get('userName').hasError('required') &&\n                      registerForm.get('userName').touched\" class=\"invalid-feedback\">\n            Usuário é obrigatório.\n          </div>\n        </div>\n        <div formGroupName=\"passwords\">\n          <div class=\"form-group\">\n            <label for=\"\">Senha:</label>\n            <input class=\"form-control\" type=\"password\" formControlName=\"password\" [ngClass]=\"{ 'is-invalid': registerForm.get('passwords.password').errors &&\n                                         registerForm.get('passwords.password').touched}\"\n              placeholder=\"Digite uma Senha\" />\n            <div *ngIf=\"registerForm.get('passwords.password').hasError('minlength') &&\n              registerForm.get('passwords.password').touched\" class=\"invalid-feedback\">\n              Deve conter no mínimo 4 caracters\n            </div>\n            <div *ngIf=\"registerForm.get('passwords.password').hasError('required') &&\n                        registerForm.get('passwords.password').touched\" class=\"invalid-feedback\">\n              Senha é obrigatório.\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"\">Confirmar Senha:</label>\n            <input class=\"form-control\" type=\"password\" formControlName=\"confirmPassword\" [ngClass]=\"{ 'is-invalid': registerForm.get('passwords.confirmPassword').errors \n                           && registerForm.get('passwords.confirmPassword').touched \n                           ||registerForm.get('passwords.confirmPassword').hasError('mismatch') \n                           && registerForm.get('passwords.confirmPassword').touched }\" placeholder=\"Confirme a Senha\" />\n            <div *ngIf=\"registerForm.get('passwords.confirmPassword').hasError('required') &&\n                        registerForm.get('passwords.confirmPassword').touched\" class=\"invalid-feedback\">\n              Confirme a Senha\n            </div>\n            <div *ngIf=\"registerForm.get('passwords.confirmPassword').hasError('mismatch') \n                        && registerForm.get('passwords.confirmPassword').touched\" class=\"invalid-feedback\">\n              Confirmação não confere\n            </div>\n          </div>\n        </div>\n        <div class=\"form-row\">\n          <div class=\"form-group col-md-8 offset-md-2\">\n            <button class=\"btn btn-lg btn-success btn-block\" [disabled]=\"!registerForm.valid\"\n              (click)=\"cadastrarUsuario()\">Registar</button>\n          </div>\n        </div>\n      </form>\n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}","<div class=\"container\">\n  <router-outlet></router-outlet>\n</div>","export class Constants {\n    static readonly DATE_FMT = 'dd/MM/yyyy';\n    static readonly DATE_TIME_FMT = `${Constants.DATE_FMT} hh:mm`;\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}